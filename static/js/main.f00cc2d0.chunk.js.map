{"version":3,"sources":["theme/index.js","global-page-styles.js","pages/utils/login.js","pages/utils/firebaseConfig.js","pages/utils/navbar.js","pages/orders/ordersManagers.js","pages/orders/ordersAdd.js","pages/orders/ordersEdit.js","pages/orders/ordersView.js","pages/sudo/sudoAddUser.js","pages/utils/page404.js","pages/calendar/calendar.js","pages/customers/AddCustomer.js","pages/customers/ViewCustomers.js","pages/customers/EditCustomer.js","App.js","index.js","qapi.js"],"names":["pageStyles","PageStyles","createGlobalStyle","_ref","styles","Object","entries","map","_ref2","prop","value","transformVar","GlobalQuarklyPageStyles","_ref3","pageUrl","React","createElement","Login","email","setEmail","useState","password","setPassword","error","setError","history","useHistory","Theme","theme","Helmet","rel","href","type","Section","height","background","padding","sm-padding","Override","slot","align-items","Text","as","font","md-font","margin","text-align","color","align-self","display","Box","flex-wrap","overflow","align-content","flex-direction","justify-content","width","lg-width","gap","grid-gap","sm-width","min-width","Input","onChange","e","target","border-radius","grid-column","Button","onClick","handleLogin","db","getDatabase","usersRef","ref","onValue","snapshot","users","val","userFound","userId","user","sessionStorage","setItem","role","push","RawHtml","place","rawKey","decryptShiftedAscii","text","Array","from","char","String","fromCharCode","charCodeAt","join","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","storage","getStorage","database","uploadImage","async","storageReference","file","name","uploadBytes","getDownloadURL","uploadAudio","audioName","Date","getTime","audioRef","audioBlob","addCustomerToDatabase","uuid","countryCode","phone","measurements","customersRef","dbRef","set","alert","fetchOrderById","callback","orderRef","order","fetchOrdersByDate","ordersRef","ordersQuery","query","orderByChild","equalTo","date","get","orders","exists","forEach","childSnapshot","id","key","deleteImageFromStorage","imageRef","storagePath","deleteObject","pages","title","path","NavBar","current","pages_content","filter","page","cursor","transition","hover-background","hover-color","Boolean","length","deleteOrder","remove","deleteOrderById","window","location","reload","console","setOrders","searchTerm","setSearchTerm","statusFilters","setStatusFilters","useEffect","data","ordersArray","keys","sort","a","b","dateA","orderCreationDate","orderCreationTime","fetchOrders","normalizePhoneNumberFn","replace","filteredOrders","progress","nameField","customer_name","toLowerCase","trim","term","nameMatch","includes","phoneField","phone_number","normalizedPhoneField","normalizedSearchTerm","phoneMatch","getStatusColor","getItem","quarkly-title","sm-margin","Icon","category","icon","MdNoteAdd","size","style","placeholder","border","margin-right","statusKey","checked","prev","toggleStatus","marginRight","htmlFor","border-width","border-style","border-color","Strong","index","_order$pieces","pieces","number_of_pieces","deadline_formatted","MdCreate","editOrder","MdDeleteSweep","handleDelete","confirm","generateUUID","characters","result","i","charAt","Math","floor","random","AddOrder","customerName","setCustomerName","setCountryCode","phoneNumber","setPhoneNumber","images","setImages","setPieces","audioLink","setAudioLink","deadlineDate","setDeadlineDate","customers","setCustomers","filtered","setFiltered","showDropdown","setShowDropdown","custRef","arr","matches","c","log","FileUploader","handleFile","hiddenFileInput","useRef","Fragment","className","handleClick","click","event","files","multiple","accept","AudioRecorder","handleAudioUpload","handleDeleteAudio","isRecording","setIsRecording","mediaRecorderRef","audioChunks","handleStopRecording","stop","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","onstop","Blob","start","controls","src","aria-label","totalPieces","reduce","acc","piece","quantity","position","MdArrowBack","left","onFocus","top","z-index","max-height","handleSelect","cust","uploadedImageUrls","Promise","all","prevImages","grid-template-columns","min","grid-auto-rows","image","File","URL","createObjectURL","object-fit","right","updatedImages","_","handleDeleteImage","backgroundColor","borderRadius","Hr","min-height","audioURL","addPieceRow","remarks","textAlign","Select","handleTypeChange","updatedPieces","fontSize","handleQuantityChange","Number","handleRemarksChange","removePieceRow","toISOString","split","required","now","orderUUID","orderData","p","details","audio_link","toLocaleTimeString","hour12","toLocaleDateString","month","day","year","deadline_raw","saveOrderToDatabase","find","newCustId","URLSearchParams","useLocation","search","setOrderData","setProgress","loading","setLoading","imageUrls","setImageUrls","setAudioURL","modalOpen","setModalOpen","modalImageUrl","setModalImageUrl","deadline","setDeadline","_data$pieces","dateString","parsedDate","getFullYear","getMonth","slice","getDate","convertToInputDateFormat","err","fetchData","extractStoragePathFromURL","url","baseURL","startsWith","encodedPath","substring","indexOf","decodeURIComponent","AudioRecorderWithDeletion","readOnly","prevUrls","openImageInModal","alt","imageToDelete","deleteAudioFromStorage","convertToReadableDate","inputDate","updatedOrderData","updatedFields","update","editOrderById","justifyContent","alignItems","zIndex","closeModal","maxHeight","maxWidth","stopPropagation","getProgressColor","_orderData$pieces","_orderData$pieces$det","placeholder-color","ProgressBar","completed","Pending","Completed","bgColor","labelAlignment","labelColor","setRole","preventDefault","newUserRef","addUserToDatabase","max-width","sm-font","letter-spacing","Link","text-decoration-line","hover-opacity","CalendarPage","myEvents","setEvents","selectedDate","setSelectedDate","toastMessage","setToastMessage","formatDateLocal","loadEventsForMonth","startOfMonth","endOfMonth","datesInMonth","d","setDate","allOrders","dateStr","getEventsForDate","formattedDate","flexDirection","Calendar","pendingEvents","sum","toDateString","tileContent","view","some","marginTop","onActiveStartDateChange","activeStartDate","borderCollapse","open","deleteCustomer","customerRef","deleteCustomerById","customersArray","fetchCustomers","normalizePhoneNumber","filteredCustomers","customer","MdPersonAdd","flex","editCustomer","customerData","setCustomerData","measurementUrls","setMeasurementUrls","fetchCustomerById","minWidth","minHeight","borderColor","uploadedmeasurementUrls","updatedCustomerData","updatedData","editCustomerById","PrivateRoute","component","Component","rest","Route","assign","render","props","Redirect","to","SudoRoute","App","Router","Switch","exact","OrdersView","Orders","OrdersAdd","OrdersEdit","ViewCustomers","AddCustomer","EditCustomer","UsersAdd","Page404","QAPI","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f00cc2d0.chunk.js","sourcesContent":["export default {\r\n\t\"defaultWidth\": 1280,\r\n\t\"breakpoints\": {\r\n\t\t\"sm\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 576\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"md\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 768\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"lg\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 992\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"color\": {\r\n\t\t\"dark\": \"#04080C\",\r\n\t\t\"darkL1\": \"#0E1317\",\r\n\t\t\"darkL2\": \"#191E22\",\r\n\t\t\"grey\": \"#6F839F\",\r\n\t\t\"greyD1\": \"#637897\",\r\n\t\t\"greyD2\": \"#586D8E\",\r\n\t\t\"light\": \"#F7FBFF\",\r\n\t\t\"lightD1\": \"#EDF2F6\",\r\n\t\t\"lightD2\": \"#E4E8EC\",\r\n\t\t\"green\": \"#00875A\",\r\n\t\t\"primary\": \"#0077CC\",\r\n\t\t\"secondary\": \"#FFC400\",\r\n\t\t\"orange\": \"#FF7C22\",\r\n\t\t\"red\": \"#DE350B\",\r\n\t\t\"purple\": \"#FD6DF9\",\r\n\t\t\"indigo\": \"#9B6CFC\"\r\n\t},\r\n\t\"fontFamily\": {\r\n\t\t\"sans\": \"-apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n\t\t\"sansHeavy\": \"Impact, Haettenschweiler, 'Franklin Gothic Bold', Charcoal, 'Helvetica Inserat', 'Bitstream Vera Sans Bold', 'Arial Black', sans-serif\",\r\n\t\t\"sansHelvetica\": \"Frutiger, 'Frutiger Linotype', Univers, Calibri, 'Gill Sans', 'Gill Sans MT', 'Myriad Pro', Myriad, 'DejaVu Sans Condensed', 'Liberation Sans', 'Nimbus Sans L', Tahoma, Geneva, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\r\n\t\t\"sansVerdana\": \"Corbel, 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', 'Bitstream Vera Sans', 'Liberation Sans', Verdana, 'Verdana Ref', sans-serif\",\r\n\t\t\"sansTrebuchet\": \"'Segoe UI', Candara, 'Bitstream Vera Sans', 'DejaVu Sans', 'Trebuchet MS', Verdana, 'Verdana Ref', sans-serif\",\r\n\t\t\"mono\": \"Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace\",\r\n\t\t\"serifTimes\": \"Cambria, 'Hoefler Text', Utopia, 'Liberation Serif', 'Nimbus Roman No9 L Regular', Times, 'Times New Roman', serif\",\r\n\t\t\"serifGeorgia\": \"Constantia, 'Lucida Bright', Lucidabright, 'Lucida Serif', Lucida, 'DejaVu Serif', 'Bitstream Vera Serif', 'Liberation Serif', Georgia, serif\",\r\n\t\t\"serifGaramond\": \"'Palatino Linotype', Palatino, Palladio, 'URW Palladio L', 'Book Antiqua', Baskerville, 'Bookman Old Style', 'Bitstream Charter', 'Nimbus Roman No9 L', Garamond, 'Apple Garamond', 'ITC Garamond Narrow', 'New Century Schoolbook', 'Century Schoolbook', 'Century Schoolbook L', Georgia, serif\"\r\n\t},\r\n\t\"font\": {\r\n\t\t\"headline1\": \"normal 900 72px/1.2 --fontFamily-sans\",\r\n\t\t\"headline2\": \"normal 900 42px/1.2 --fontFamily-sans\",\r\n\t\t\"headline3\": \"normal 500 28px/1.2 --fontFamily-sans\",\r\n\t\t\"base\": \"normal 300 16px/1.5 --fontFamily-sans\",\r\n\t\t\"lead\": \"normal 300 20px/1.5 --fontFamily-sans\"\r\n\t},\r\n\t\"boxShadow\": {\r\n\t\t\"m\": \"0 4px 5px -1px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"l\": \"0 10px 15px -3px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"xl\": \"0 20px 25px -5px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"xxl\": \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\"\r\n\t},\r\n\t\"background\": {\r\n\t\t\"primaryGradient\": \"linear-gradient(180deg, --color-primary, transparent) no-repeat 0 0\",\r\n\t\t\"secondaryGradient\": \"linear-gradient(180deg, --color-secondary, transparent) no-repeat 0 0\"\r\n\t},\r\n\t\"transform\": {\r\n\t\t\"rotate90\": \"rotate(90deg)\",\r\n\t\t\"rotate180\": \"rotate(180deg)\",\r\n\t\t\"flipX\": \"scaleX(-1)\",\r\n\t\t\"flipY\": \"scaleY(-1)\"\r\n\t},\r\n\t\"transition\": {\r\n\t\t\"opacityOut\": \"opacity --transitionDuration-normal --transitionTimingFunction-easeOut\",\r\n\t\t\"transformOut\": \"transform --transitionDuration-normal --transitionTimingFunction-easeOut\",\r\n\t\t\"transformInOut\": \"transform --transitionDuration-normal --transitionTimingFunction-easeInOut\"\r\n\t},\r\n\t\"transitionTimingFunction\": {\r\n\t\t\"easeIn\": \"cubic-bezier(0.4, 0, 1, 1)\",\r\n\t\t\"easeOut\": \"cubic-bezier(0, 0, 0.2, 1)\",\r\n\t\t\"easeInOut\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\r\n\t\t\"sharp\": \"cubic-bezier(0.4, 0, 0.6, 1)\"\r\n\t},\r\n\t\"transitionDuration\": {\r\n\t\t\"fastest\": \"0.1s\",\r\n\t\t\"fast\": \"0.2s\",\r\n\t\t\"normal\": \"0.3s\"\r\n\t},\r\n\t\"filter\": {\r\n\t\t\"grayscale\": \"grayscale(100%)\",\r\n\t\t\"invert\": \"invert(100%)\",\r\n\t\t\"blur\": \"blur(10px)\"\r\n\t},\r\n\t\"animation\": {},\r\n\t\"keyframes\": {\r\n\t\t\"fadeIn\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"from\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"to\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"fadeOut\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"from\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"to\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"components\": {\r\n\t\t\"section\": {\r\n\t\t\t\"maxWidth\": {\r\n\t\t\t\t\"default\": \"1280px\"\r\n\t\t\t},\r\n\t\t\t\"minWidth\": {\r\n\t\t\t\t\"default\": \"300px\"\r\n\t\t\t},\r\n\t\t\t\"width\": {\r\n\t\t\t\t\"default\": \"90%\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"stack\": {\r\n\t\t\t\"gap\": {\r\n\t\t\t\t\"default\": \"32px\",\r\n\t\t\t\t\"small\": \"16px\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"version\": 1\r\n}","import React from \"react\";\r\nimport { transformVar } from \"@quarkly/atomize\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst pageStyles = {\r\n    \"404\": {},\r\n    \"index\": {},\r\n    \"login\": {},\r\n    \"orders-customers\": {}\r\n};\r\n\r\nconst PageStyles = createGlobalStyle`\r\n    body {\r\n        ${({ styles }) =>\r\n            Object.entries(styles || {}).map(\r\n                ([prop, value]) => `${prop}: ${transformVar(prop, value)};`\r\n            )}\r\n    }\r\n`;\r\nexport const GlobalQuarklyPageStyles = ({ pageUrl }) => <PageStyles styles={pageStyles[pageUrl]} />\r\n","import React, { useState } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Section, Input, Box, Button } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { RawHtml, Override } from \"@quarkly/components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref, onValue } from \"firebase/database\"; // Import Firebase\r\nimport Footer from \"./footer\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory(); // Used for redirection\r\n\r\n  // Handle login with Firebase\r\n  const handleLogin = () => {\r\n    const db = getDatabase();\r\n    const usersRef = ref(db, \"vamsi/users\");\r\n\r\n    onValue(usersRef, (snapshot) => {\r\n      const users = snapshot.val();\r\n      let userFound = false;\r\n\r\n      // Check for matching email and password in Firebase Realtime Database\r\n      for (const userId in users) {\r\n        const user = users[userId];\r\n        if (user.email === email && user.password === password) {\r\n          userFound = true;\r\n\r\n          // Store user role in sessionStorage\r\n          sessionStorage.setItem(\"role\", user.role);\r\n\r\n          // Redirect based on role\r\n          if (user.role === \"manager\" || user.role === \"sudo\") {\r\n            history.push(\"/orders\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Show error if no match found\r\n      if (!userFound) {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"index\"} />\r\n      <Helmet>\r\n        <title>Login</title>\r\n        <link rel={\"shortcut icon\"} href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"} type={\"image/x-icon\"} />\r\n      </Helmet>\r\n      <Section height=\"auto\" background=\"--color-light\" padding=\"0 0 0px 0\">\r\n        <Section padding=\"80px 0\" sm-padding=\"40px 0\">\r\n          <Override slot=\"SectionContent\" align-items=\"center\" />\r\n          <Text as=\"h2\" font=\"--headline1\" md-font=\"--headline2\" margin=\"20px 0 0 0\">\r\n            Vamsi Printers Internal Tools\r\n          </Text>\r\n          <Text as=\"p\" font=\"--lead\" margin=\"0px 0 0px 0\" text-align=\"center\">\r\n            Manager Login\r\n          </Text>\r\n        </Section>\r\n      </Section>\r\n\r\n      <Section background=\"--color-light\" color=\"--dark\" padding=\"0px 0 64px 0\" text-align=\"left\">\r\n        <Override slot=\"SectionContent\" align-self=\"auto\" display=\"flex\" align-items=\"center\" />\r\n        <Box\r\n          margin=\"16px 16px 16px 16px\"\r\n          display=\"inline-block\"\r\n          flex-wrap=\"wrap\"\r\n          overflow=\"visible\"\r\n          align-content=\"space-around\"\r\n          align-items=\"center\"\r\n          flex-direction=\"row\"\r\n          justify-content=\"center\"\r\n          align-self=\"center\"\r\n          text-align=\"left\"\r\n        >\r\n          <Box width=\"100%\" padding=\"8px 8px 8px 8px\" lg-width=\"100%\">\r\n            <Box>\r\n              <Box\r\n                gap=\"16px\"\r\n                display=\"grid\"\r\n                flex-direction=\"row\"\r\n                flex-wrap=\"wrap\"\r\n                grid-gap=\"16px\"\r\n              >\r\n                {/* Error Message */}\r\n                {error && (\r\n                  <Text color=\"red\" text-align=\"center\">\r\n                    {error}\r\n                  </Text>\r\n                )}\r\n\r\n                <Box\r\n                  sm-width=\"100%\"\r\n                  display=\"flex\"\r\n                  flex-direction=\"column\"\r\n                  width=\"100%\"\r\n                  min-width=\"100%\"\r\n                >\r\n                  <Text font=\"--base\" margin=\"0 0 4px 0\">\r\n                    Email\r\n                  </Text>\r\n                  <Input\r\n                    width=\"312px\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} // Set email state\r\n                    border-radius=\"7.5px\"\r\n                  />\r\n                </Box>\r\n                <br />\r\n                <Box sm-width=\"100%\" display=\"flex\" flex-direction=\"column\">\r\n                  <Text font=\"--base\" margin=\"0 0 4px 0\">\r\n                    Password\r\n                  </Text>\r\n                  <Input\r\n                    width=\"100%\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)} // Set password state\r\n                    border-radius=\"7.5px\"\r\n                  />\r\n                </Box>\r\n\r\n                <Box display=\"flex\" flex-direction=\"column\" align-items=\"flex-start\" grid-column=\"1 / span 2\">\r\n                  <Button onClick={handleLogin} border-radius=\"7.5px\">\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Section>\r\n\r\n      <RawHtml>\r\n        <style place={\"endOfHead\"} rawKey={\"66f6d1359710450018a331b3\"}>\r\n          {\":root {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  box-sizing: inherit;\\n}\"}\r\n        </style>\r\n      </RawHtml>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\"; // Import 'ref' directly\r\nimport {\r\n  getDatabase,\r\n  ref as dbRef,\r\n  set,\r\n  onValue,\r\n  query,\r\n  orderByChild,\r\n  equalTo,\r\n  get,\r\n  remove,\r\n  push,\r\n  update,\r\n  off,\r\n} from \"firebase/database\"; // Import Realtime Database functions\r\nimport { deleteObject } from \"firebase/storage\";\r\nconst REACT_APP_FIREBASE_API_KEY = \"BJ{bTzCojnx`woWCerUe9PsvpyU3VIXyI.dj5Od\";\r\nconst REACT_APP_FIREBASE_AUTH_DOMAIN = \"hvoepkvt.qspe/gjsfcbtfbqq/dpn\";\r\nconst REACT_APP_FIREBASE_DATABASE_URL =\r\n  \"iuuqt;00hvoepkvt.qspe.efgbvmu.suec/btjb.tpvuifbtu2/gjsfcbtfebubcbtf/bqq\";\r\nconst REACT_APP_FIREBASE_PROJECT_ID = \"hvoepkvt.qspe\";\r\nconst REACT_APP_FIREBASE_STORAGE_BUCKET = \"hvoepkvt.qspe/bqqtqpu/dpn\";\r\nconst REACT_APP_FIREBASE_MESSAGING_SENDER_ID = \":43279::131:\";\r\nconst REACT_APP_FIREBASE_APP_ID = \"2;:43279::131:;xfc;25geg8c4ef97cd987gdb11\";\r\n\r\nfunction decryptShiftedAscii(text) {\r\n  return Array.from(text)\r\n    .map((char) => String.fromCharCode(char.charCodeAt(0) - 1))\r\n    .join(\"\");\r\n}\r\n\r\n// Firebase credentials (move to .env)\r\nconst firebaseConfig = {\r\n  apiKey: decryptShiftedAscii(REACT_APP_FIREBASE_API_KEY),\r\n  authDomain: decryptShiftedAscii(REACT_APP_FIREBASE_AUTH_DOMAIN),\r\n  databaseURL: decryptShiftedAscii(REACT_APP_FIREBASE_DATABASE_URL), // This is required to initialize the Realtime Database\r\n  projectId: decryptShiftedAscii(REACT_APP_FIREBASE_PROJECT_ID),\r\n  storageBucket: decryptShiftedAscii(REACT_APP_FIREBASE_STORAGE_BUCKET),\r\n  messagingSenderId: decryptShiftedAscii(\r\n    REACT_APP_FIREBASE_MESSAGING_SENDER_ID\r\n  ),\r\n  appId: decryptShiftedAscii(REACT_APP_FIREBASE_APP_ID),\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase services\r\nconst storage = getStorage(app);\r\nconst database = getDatabase(app);\r\n\r\n// Function to upload image to Firebase Storage\r\nexport const uploadImage = async (file) => {\r\n  const storageReference = ref(storage, `vamsi/images/${file.name}`); // Use 'ref' directly for creating storage references\r\n  await uploadBytes(storageReference, file);\r\n  return getDownloadURL(storageReference); // Return the URL of the uploaded image\r\n};\r\n\r\n// Function to upload audio to Firebase Storage\r\nexport const uploadAudio = async (audioBlob) => {\r\n  const audioName = `audio_${new Date().getTime()}.wav`; // Generate a unique filename\r\n  const audioRef = ref(storage, `vamsi/audio/${audioName}`);\r\n  await uploadBytes(audioRef, audioBlob); // Upload audio to Firebase Storage\r\n  return getDownloadURL(audioRef); // Return the download URL for the uploaded audio\r\n};\r\n\r\n// Function to save order to Firebase Realtime Database\r\nexport const saveOrderToDatabase = async (orderData, orderUUID) => {\r\n  const orderRef = dbRef(database, `vamsi/orders/${orderUUID}`);\r\n  await set(orderRef, orderData);\r\n};\r\n\r\nexport const addCustomerToDatabase = async (\r\n  uuid,\r\n  name,\r\n  countryCode,\r\n  phone,\r\n  measurements\r\n) => {\r\n  const db = getDatabase();\r\n  const customersRef = dbRef(db, `vamsi/customers/${uuid}`); // Reference to 'customers' node\r\n\r\n  await set(customersRef, {\r\n    name,\r\n    countryCode,\r\n    phone,\r\n    measurements, // Array of image URLs\r\n  });\r\n  alert(\"Customer added successfully\");\r\n};\r\n\r\n// Function to fetch an order by UUID\r\nexport const fetchOrderById = async (uuid, callback) => {\r\n  const orderRef = dbRef(database, `vamsi/orders/${uuid}`);\r\n  onValue(orderRef, (snapshot) => {\r\n    const order = snapshot.val();\r\n    callback(order); // Return the found order or null if not found\r\n  });\r\n};\r\n\r\nexport const fetchCustomerById = (uuid, callback) => {\r\n  console.log(uuid);\r\n  const orderRef = dbRef(database, `vamsi/customers/${uuid}`);\r\n  onValue(orderRef, (snapshot) => {\r\n    const order = snapshot.val();\r\n    callback(order); // Return the found order or null if not found\r\n  });\r\n};\r\n\r\n// Function to delete an order by UUID\r\nexport const deleteOrderById = async (uuid) => {\r\n  const orderRef = dbRef(database, `vamsi/orders/${uuid}`);\r\n  await remove(orderRef);\r\n};\r\n\r\n// Function to edit an order by UUID\r\n\r\nexport const fetchOrdersByDate = async (date) => {\r\n  const ordersRef = dbRef(database, \"vamsi/orders\");\r\n  const ordersQuery = query(\r\n    ordersRef,\r\n    orderByChild(\"deadline_raw\"),\r\n    equalTo(date)\r\n  ); // Use 'deadline' as the field\r\n\r\n  const snapshot = await get(ordersQuery);\r\n  const orders = [];\r\n  if (snapshot.exists()) {\r\n    snapshot.forEach((childSnapshot) => {\r\n      orders.push({ id: childSnapshot.key, ...childSnapshot.val() });\r\n    });\r\n  }\r\n\r\n  return orders; // Return the list of orders for the specified date\r\n};\r\n\r\nexport const deleteCustomerById = async (uuid) => {\r\n  const customerRef = dbRef(database, `vamsi/customers/${uuid}`);\r\n  await remove(customerRef);\r\n};\r\n\r\nexport const deleteImageFromStorage = async (storagePath) => {\r\n  const storage = getStorage();\r\n  const imageRef = ref(storage, storagePath);\r\n  await deleteObject(imageRef);\r\n};\r\n\r\n// Function to delete audio from Firebase Storage\r\nexport const deleteAudioFromStorage = async (storagePath) => {\r\n  const storage = getStorage();\r\n  const audioRef = ref(storage, storagePath);\r\n  await deleteObject(audioRef);\r\n};\r\n\r\nexport const editCustomerById = async (uuid, updatedData) => {\r\n  console.log({uuid},{updatedData});\r\n  const customerRef = dbRef(database, `vamsi/customers/${uuid}`);\r\n\r\n  await update(customerRef, updatedData);\r\n};\r\n\r\nexport const editOrderById = async (uuid, updatedFields) => {\r\n\r\n  const orderRef = dbRef(database, `vamsi/orders/${uuid}`);\r\n  await update(orderRef, updatedFields);\r\n};\r\n\r\n","import { Text, Box } from \"@quarkly/widgets\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst pages = [\r\n  // { title: \"Summary\", role: \"manager\", path: \"/summary\" },\r\n  { title: \"Calendar\", role: \"manager\", path: \"/calendar\" },\r\n  { title: \"Orders\", role: \"manager\", path: \"/orders\" },\r\n  { title: \"Add Users\", role: \"sudo\", path: \"/sudo/users/add\" },\r\n  { title: \"View Customers\", role: \"manager\", path: \"/customers/view\" }\r\n];\r\n\r\nexport const NavBar = ({ role, current }) => {\r\n  const history = useHistory();\r\n\r\n  const pages_content = pages\r\n    .filter((page) => page.role === role || role === \"sudo\")\r\n    .map((page) =>\r\n      page.title !== current ? (\r\n        <Text\r\n          key={page.path}\r\n          onClick={() => history.push(page.path)}\r\n          cursor=\"pointer\"\r\n          margin=\"0 10px\"\r\n          font=\"--lead\"\r\n          padding=\"10px\"\r\n          border-radius=\"5px\"\r\n          transition=\"background-color 0.3s\"\r\n          hover-background=\"--color-light\"\r\n          hover-color=\"--primary\"\r\n        >\r\n          {page.title}\r\n        </Text>\r\n      ) : null\r\n    )\r\n    .filter(Boolean); // Removes any `null` or `false` values from the array\r\n\r\n  if (pages_content.length > 0) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justify-content=\"space-around\"\r\n        align-items=\"center\"\r\n        padding=\"20px\"\r\n        background=\"--color-lightD2\"\r\n      >\r\n        {pages_content}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Icon,\r\n  Box,\r\n  Section,\r\n  Strong,\r\n  Input,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdCreate, MdDeleteSweep, MdNoteAdd } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref as dbRef, onValue } from \"firebase/database\";\r\nimport { deleteOrderById } from \"../utils/firebaseConfig\";\r\nimport { NavBar } from \"../utils/navbar\";\r\nimport Footer from \"../utils/footer\";\r\n\r\n// Fetch orders from Firebase Realtime Database and sort them by datetime\r\nconst fetchOrders = (setOrders) => {\r\n  const db = getDatabase();\r\n  const ordersRef = dbRef(db, \"vamsi/orders\");\r\n\r\n  onValue(ordersRef, (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data) {\r\n      const ordersArray = Object.keys(data).map((key) => ({\r\n        uuid: key,\r\n        ...data[key],\r\n      }));\r\n\r\n      // Sort descending by combined orderCreationDate + orderCreationTime\r\n      ordersArray.sort((a, b) => {\r\n        const dateA = new Date(`${a.orderCreationDate} ${a.orderCreationTime}`);\r\n        const dateB = new Date(`${b.orderCreationDate} ${b.orderCreationTime}`);\r\n        return dateB - dateA; // Newest first\r\n      });\r\n\r\n      setOrders(ordersArray);\r\n    }\r\n  });\r\n};\r\n\r\n// Function to delete an order and reload the page\r\nconst deleteOrder = async (uuid) => {\r\n  try {\r\n    await deleteOrderById(uuid);\r\n    window.location.reload();\r\n  } catch (error) {\r\n    console.error(\"Error deleting order: \", error);\r\n    alert(\"Failed to delete the order. Please try again.\");\r\n  }\r\n};\r\n\r\nexport default () => {\r\n  const [orders, setOrders] = useState([]);              // All fetched orders\r\n  const [searchTerm, setSearchTerm] = useState(\"\");      // Text‐search filter\r\n  const [statusFilters, setStatusFilters] = useState({   // Which statuses are shown\r\n    \"Pre-press\" : true,\r\n    \"Press\" : true,\r\n    \"Post-press\" : true,\r\n    \"Delivered\" : true,\r\n    \"Payment Pending\" : true,\r\n    \"Payment Received\" : true\r\n  });\r\n  const history = useHistory();\r\n\r\n  // Fetch all orders on component mount (already sorted)\r\n  useEffect(() => {\r\n    fetchOrders(setOrders);\r\n  }, []);\r\n\r\n  // Navigate to edit page\r\n  const editOrder = (uuid) => {\r\n    history.push(`/orders/edit?uuid=${uuid}`);\r\n  };\r\n\r\n  // Confirm and delete\r\n  const handleDelete = (uuid) => {\r\n    if (window.confirm(\"Are you sure you want to delete this order?\")) {\r\n      deleteOrder(uuid);\r\n    }\r\n  };\r\n\r\n  // Normalize phone number by removing non-digit characters\r\n  const normalizePhoneNumberFn = (phone) => {\r\n    return String(phone).replace(/\\D/g, \"\");\r\n  };\r\n\r\n  // Handle toggling a checkbox for a status filter\r\n  const toggleStatus = (statusKey) => {\r\n    setStatusFilters((prev) => ({\r\n      ...prev,\r\n      [statusKey]: !prev[statusKey],\r\n    }));\r\n  };\r\n\r\n  // Filter orders based on search term AND status checkbox settings\r\n  const filteredOrders = orders.filter((order) => {\r\n    // 1) Only include if order.progress is one of the checked statuses\r\n    if (!statusFilters[order.progress]) {\r\n      return false;\r\n    }\r\n\r\n    // 2) Then check text search (customer_name or phone number)\r\n    try {\r\n      const nameField = String(order.customer_name || \"\")\r\n        .toLowerCase()\r\n        .trim();\r\n      const term = String(searchTerm || \"\").toLowerCase().trim();\r\n      const nameMatch = nameField.includes(term);\r\n\r\n      const phoneField = String(order.phone_number || order.phone || \"\");\r\n      const normalizedPhoneField = normalizePhoneNumberFn(phoneField);\r\n      const normalizedSearchTerm = normalizePhoneNumberFn(term);\r\n\r\n      let phoneMatch = false;\r\n      if (normalizedSearchTerm !== \"\") {\r\n        phoneMatch = normalizedPhoneField.includes(normalizedSearchTerm);\r\n      }\r\n\r\n      // Keep if either nameMatch or phoneMatch\r\n      return nameMatch || phoneMatch;\r\n    } catch (error) {\r\n      console.error(\"Error filtering orders:\", error);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // Decide color based on status\r\nconst getStatusColor = (progress) => {\r\n  switch (progress) {\r\n    case \"Pre-press\":\r\n      return \"#ff4d4d\"; // Bright red (start)\r\n\r\n    case \"Press\":\r\n      return \"#ff7518\"; // Reddish-orange\r\n\r\n    case \"Post-press\":\r\n      return \"#ffaa00\"; // Orange\r\n\r\n    case \"Delivered\":\r\n      return \"#ffd700\"; // Yellow\r\n\r\n    case \"Payment Pending\":\r\n      return \"#c0c000\"; // Yellow-green (waiting)\r\n\r\n    case \"Payment Received\":\r\n      return \"#31a931\"; // Green (final/complete)\r\n\r\n    default:\r\n      return \"#ff0000\"; // Default red for unknown statuses\r\n  }\r\n};\r\n\r\n\r\n\r\n  const addOrder = () => {\r\n    history.push(\"/orders/add\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-managers\"} />\r\n      <Helmet>\r\n        <title>Orders Manager</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Orders\"} />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Orders-Manager\">\r\n        <Text\r\n          margin=\"0px 0px 20px 0px\"\r\n          text-align=\"center\"\r\n          font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n          color=\"--dark\"\r\n          sm-margin=\"0px 0px 30px 0px\"\r\n        >\r\n          Orders\r\n        </Text>\r\n\r\n        <Icon\r\n          category=\"md\"\r\n          icon={MdNoteAdd}\r\n          onClick={() => addOrder()}\r\n          size=\"32px\"\r\n          align-self=\"flex-end\"\r\n          margin=\"16px 0px 16px 0px\"\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n\r\n        {/* ─── Search Bar + Status Filter Bar ─── */}\r\n        <Box\r\n          display=\"flex\"\r\n          flex-direction=\"column\"\r\n          align-items=\"center\"\r\n          margin=\"0px 0px 20px 0px\"\r\n        >\r\n          {/* Search Input */}\r\n          <Box\r\n            display=\"flex\"\r\n            justify-content=\"center\"\r\n            align-items=\"center\"\r\n            width=\"100%\"\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search by customer name or phone number\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              width=\"50%\"\r\n              padding=\"8px 12px\"\r\n              border=\"1px solid #ccc\"\r\n              border-radius=\"4px\"\r\n              margin-right=\"10px\"\r\n            />\r\n          </Box>\r\n\r\n          {/* Status Filter Checkboxes */}\r\n          <Box\r\n            display=\"flex\"\r\n            justify-content=\"center\"\r\n            align-items=\"center\"\r\n            margin=\"10px 0px 0px 0px\"\r\n          >\r\n            {[\"Pre-press\",\r\n    \"Press\",\r\n    \"Post-press\",\r\n    \"Delivered\",\r\n    \"Payment Pending\",\r\n    \"Payment Received\"].map((statusKey) => (\r\n              <Box\r\n                key={statusKey}\r\n                display=\"flex\"\r\n                align-items=\"center\"\r\n                margin=\"0px 15px\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={`filter-${statusKey}`}\r\n                  checked={statusFilters[statusKey]}\r\n                  onChange={() => toggleStatus(statusKey)}\r\n                  style={{ marginRight: \"6px\" }}\r\n                />\r\n                <label htmlFor={`filter-${statusKey}`}>\r\n                  <Text font=\"--lead\" color=\"--dark\">\r\n                    {statusKey}\r\n                  </Text>\r\n                </label>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* ─── Table Header & Rows ─── */}\r\n        <Box\r\n          min-width=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\"\r\n        >\r\n          {/* Header Row */}\r\n          <Box\r\n            display=\"flex\"\r\n            justify-content=\"space-between\"\r\n            align-items=\"center\"\r\n            padding=\"10px\"\r\n            border-width=\"0 0 2px 0\"\r\n            border-style=\"solid\"\r\n            border-color=\"#d1d7de\"\r\n            margin=\"0px 0px 10px 0px\"\r\n          >\r\n            {/* S. No. Column */}\r\n            <Text width=\"5%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>S. No.</Strong>\r\n            </Text>\r\n\r\n            <Text width=\"20%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Order Time</Strong>\r\n            </Text>\r\n            <Text width=\"25%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Customer Name</Strong>\r\n            </Text>\r\n            <Text width=\"15%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Status</Strong>\r\n            </Text>\r\n            <Text width=\"10%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Pieces</Strong>\r\n            </Text>\r\n            <Text width=\"20%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Deadline</Strong>\r\n            </Text>\r\n            <Text width=\"5%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Edit</Strong>\r\n            </Text>\r\n            <Text width=\"5%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Delete</Strong>\r\n            </Text>\r\n          </Box>\r\n\r\n          {/* Order Rows */}\r\n          {filteredOrders.length > 0 ? (\r\n            <Box>\r\n              {filteredOrders.map((order, index) => (\r\n                <Box\r\n                  key={order.uuid}\r\n                  display=\"flex\"\r\n                  justify-content=\"space-between\"\r\n                  align-items=\"center\"\r\n                  padding=\"10px\"\r\n                  border-width=\"0 0 1px 0\"\r\n                  border-style=\"solid\"\r\n                  border-color=\"#d1d7de\"\r\n                  background=\"#ffffff\"\r\n                  margin=\"0px 0px 10px 0px\"\r\n                >\r\n                  {/* S. No. */}\r\n                  <Text\r\n                    width=\"5%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {index + 1}\r\n                  </Text>\r\n\r\n                  {/* Order Time */}\r\n                  <Text\r\n                    width=\"20%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.orderCreationDate} / {order.orderCreationTime}\r\n                  </Text>\r\n\r\n                  {/* Customer Name */}\r\n                  <Text\r\n                    width=\"25%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 500 28px/1.2 --fontFamily-serifGeorgia\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.customer_name}\r\n                  </Text>\r\n\r\n                  {/* Status with Conditional Color */}\r\n                  <Text\r\n                    width=\"15%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color={getStatusColor(order.progress)}\r\n                  >\r\n                    <Strong>{order.progress}</Strong>\r\n                  </Text>\r\n\r\n                  {/* Pieces */}\r\n                  <Text\r\n                    width=\"10%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.pieces?.number_of_pieces || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Deadline */}\r\n                  <Text\r\n                    width=\"20%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.deadline_formatted || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Edit Icon */}\r\n                  <Box\r\n                    width=\"5%\"\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdCreate}\r\n                      size=\"32px\"\r\n                      margin=\"0px\"\r\n                      onClick={() => editOrder(order.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Delete Icon */}\r\n                  <Box\r\n                    width=\"5%\"\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"32px\"\r\n                      margin=\"0px\"\r\n                      onClick={() => handleDelete(order.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Text>No orders available</Text>\r\n          )}\r\n        </Box>\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdNoteAdd, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  uploadImage,\r\n  uploadAudio,\r\n  saveOrderToDatabase,\r\n  addCustomerToDatabase\r\n} from \"../utils/firebaseConfig\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref as dbRef, onValue } from \"firebase/database\";\r\n\r\n// UUID generation\r\nconst generateUUID = () => {\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let result = \"\";\r\n  for (let i = 0; i < 7; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport default function AddOrder() {\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"+91\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [pieces, setPieces] = useState([]);\r\n  const [audioLink, setAudioLink] = useState(\"\");\r\n  const [deadlineDate, setDeadlineDate] = useState(new Date());\r\n  const [customers, setCustomers] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // Fetch existing customers\r\n  useEffect(() => {\r\n    const db = getDatabase();\r\n    const custRef = dbRef(db, \"vamsi/customers\");\r\n    onValue(custRef, (snapshot) => {\r\n      const data = snapshot.val() || {};\r\n      const arr = Object.keys(data).map((key) => ({\r\n        uuid: key,\r\n        name: data[key].name,\r\n        phone: data[key].phone || data[key].phone_number,\r\n        countryCode : data[key].countryCode\r\n      }));\r\n      setCustomers(arr);\r\n    });\r\n  }, []);\r\n\r\n  // Filter as user types\r\n  useEffect(() => {\r\n    if (customerName.trim()) {\r\n      const term = customerName.toLowerCase();\r\n      const matches = customers.filter((c) =>\r\n        c.name.toLowerCase().includes(term)\r\n      );\r\n      setFiltered(matches);\r\n      console.log(matches);\r\n      setShowDropdown(matches.length > 0);\r\n    } else {\r\n      setShowDropdown(false);\r\n    }\r\n  }, [customerName, customers]);\r\n\r\n  // Handlers for selection\r\n  const handleSelect = (cust) => {\r\n    console.log(cust);\r\n    setCustomerName(cust.name);\r\n    setPhoneNumber(cust.phone);\r\n    setCountryCode(cust.countryCode);\r\n    setShowDropdown(false);\r\n  };\r\n\r\n  // Custom File Uploader Component\r\n  const FileUploader = ({ handleFile }) => {\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const handleClick = () => {\r\n      hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      handleFile(files);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          className=\"button-upload\"\r\n          onClick={handleClick}\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n        >\r\n          Upload Images\r\n        </Button>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleChange}\r\n          ref={hiddenFileInput}\r\n          style={{ display: \"none\" }}\r\n          multiple\r\n          accept=\"image/*\"\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Audio Recorder Component\r\n  const AudioRecorder = ({\r\n    handleAudioUpload,\r\n    handleDeleteAudio,\r\n    audioLink,\r\n  }) => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const mediaRecorderRef = useRef(null);\r\n    const audioChunks = useRef([]);\r\n\r\n    const handleStartRecording = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: true,\r\n        });\r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        mediaRecorderRef.current = mediaRecorder;\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          audioChunks.current.push(event.data);\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunks.current, {\r\n            type: \"audio/wav\",\r\n          });\r\n          const audioLink = await handleAudioUpload(audioBlob);\r\n          audioChunks.current = [];\r\n        };\r\n\r\n        mediaRecorder.start();\r\n        setIsRecording(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing microphone:\", error);\r\n        alert(\"Error accessing microphone\");\r\n      }\r\n    };\r\n\r\n    const handleStopRecording = () => {\r\n      if (mediaRecorderRef.current) {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n          onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n        >\r\n          {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n        </Button>\r\n        {audioLink && (\r\n          <Box display=\"flex\" align-items=\"center\">\r\n            <audio controls>\r\n              <source src={audioLink} type=\"audio/wav\" />\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdDeleteSweep}\r\n              size=\"24px\"\r\n              color=\"#ff0000\"\r\n              margin=\"0 0 0 10px\"\r\n              onClick={handleDeleteAudio}\r\n              style={{ cursor: \"pointer\" }}\r\n              aria-label=\"Delete Audio\"\r\n            />\r\n          </Box>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Handle file upload and store image paths\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function\r\n      );\r\n      setImages((prevImages) => [...prevImages, ...uploadedImageUrls]); // Store URLs\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle audio upload and return the uploaded audio URL\r\n  const handleAudioUpload = async (audioBlob) => {\r\n    try {\r\n      const audioURL = await uploadAudio(audioBlob);\r\n      setAudioLink(audioURL);\r\n      return audioURL;\r\n    } catch (error) {\r\n      console.error(\"Error uploading audio:\", error);\r\n      alert(\"Failed to upload audio. Please try again.\");\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  // Handle deleting an image\r\n  const handleDeleteImage = (index) => {\r\n    const updatedImages = images.filter((_, i) => i !== index);\r\n    setImages(updatedImages);\r\n  };\r\n\r\n  // Handle deleting audio\r\n  const handleDeleteAudio = () => {\r\n    setAudioLink(\"\");\r\n  };\r\n\r\n  // Add a new piece row\r\n  const addPieceRow = () => {\r\n    setPieces([\r\n      ...pieces,\r\n      { type: \"Digital Printing\", quantity: 1, remarks: \"\" },\r\n    ]);\r\n  };\r\n\r\n  // Remove a piece row\r\n  const removePieceRow = (index) => {\r\n    setPieces(pieces.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Handle piece data updates\r\n  const handleTypeChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, type: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleQuantityChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, quantity: Number(value) } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleRemarksChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, remarks: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const totalPieces = pieces.reduce((acc, piece) => acc + piece.quantity, 0);\r\n\r\n  const formatDateLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = `0${date.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${date.getDate()}`.slice(-2);\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Submit the order\r\n  const handleSubmitOrder = async () => {\r\n    // validation omitted\r\n    const now = new Date();\r\n    const orderUUID = generateUUID();\r\n    const orderData = {\r\n      customer_name: customerName,\r\n      phone_number: `${countryCode}${phoneNumber}`,\r\n      images,\r\n      pieces: {\r\n        number_of_pieces: pieces.reduce((a, p) => a + p.quantity, 0),\r\n        details: pieces,\r\n      },\r\n      audio_link: audioLink,\r\n      orderCreationTime: now.toLocaleTimeString(\"en-US\", { hour12: true }),\r\n      orderCreationDate: now.toLocaleDateString(\"en-US\", {\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n      }),\r\n      progress: \"Pre-press\",\r\n      uuid: orderUUID,\r\n      deadline_raw: deadlineDate.toISOString().split(\"T\")[0],\r\n      deadline_formatted: deadlineDate.toLocaleDateString(\"en-US\", {\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n      }),\r\n    };\r\n    await saveOrderToDatabase(orderData, orderUUID);\r\n\r\n    // inside handleSubmitOrder, before saving the order:\r\n    const existing = customers.find((c) =>  c.name === customerName && c.phone === phoneNumber && c.countryCode === countryCode);\r\n    if (!existing) {\r\n      // generate an ID and push a new customer node\r\n      const newCustId = generateUUID();\r\n      await addCustomerToDatabase(\r\n        newCustId,\r\n        customerName,\r\n        countryCode,\r\n        phoneNumber,\r\n        []\r\n      );\r\n    }\r\n\r\n\r\n    history.push(\"/orders\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-customers\"} />\r\n      <Helmet>\r\n        <title>Add Order</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n      <Section padding=\"90px 0 100px 0\">\r\n        <Box position=\"relative\" text-align=\"center\">\r\n          <Icon\r\n            icon={MdArrowBack}\r\n            onClick={() => history.push(\"/orders\")}\r\n            style={{ position: \"absolute\", left: 0, cursor: \"pointer\" }}\r\n          />\r\n          <Text font=\"56px\">New Order</Text>\r\n        </Box>\r\n\r\n        {/* Customer Input with Autocomplete */}\r\n        <Text>Customer Name</Text>\r\n        <Box position=\"relative\" width=\"50%\">\r\n          <Input\r\n            value={customerName}\r\n            onChange={(e) => setCustomerName(e.target.value)}\r\n            onFocus={() => setShowDropdown(filtered.length > 0)}\r\n          />\r\n          {showDropdown && (\r\n            <Box\r\n              position=\"absolute\"\r\n              top=\"100%\"\r\n              width=\"100%\"\r\n              background=\"white\"\r\n              border=\"1px solid #ccc\"\r\n              z-index={10}\r\n              max-height=\"150px\"\r\n              overflow=\"auto\"\r\n            >\r\n              {filtered.map((c) => (\r\n                <Box\r\n                  key={c.uuid}\r\n                  padding=\"8px\"\r\n                  hover-background=\"#f0f0f0\"\r\n                  onClick={() => handleSelect(c)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  {c.name}\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Phone Input */}\r\n        <Text>Phone Number</Text>\r\n        <Box display=\"flex\">\r\n          <Input\r\n            value={countryCode}\r\n            onChange={(e) => setCountryCode(e.target.value)}\r\n            width=\"10%\"\r\n          />\r\n          <Input\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            width=\"40%\"\r\n          />\r\n        </Box>\r\n\r\n        {/* Image Upload Section */}\r\n        <Text margin=\"15px 0px 15px 0px\">Upload Images</Text>\r\n        <FileUploader handleFile={handleFileUpload} />\r\n        {images.length === 0 ? null : (\r\n          <Box\r\n            display=\"grid\"\r\n            grid-template-columns={`repeat(${Math.min(\r\n              images.length,\r\n              4\r\n            )}, 225px)`}\r\n            grid-auto-rows=\"225px\"\r\n            grid-gap=\"15px\"\r\n            width={`${\r\n              Math.min(images.length, 4) * 225 +\r\n              (Math.min(images.length, 4) - 1) * 15\r\n            }px`}\r\n            overflow=\"auto\"\r\n            padding=\"15px\"\r\n            border=\"1px solid #ccc\"\r\n            margin=\"15px 0\"\r\n          >\r\n            {images.map((image, index) => (\r\n              <Box\r\n                key={index}\r\n                as=\"div\"\r\n                position=\"relative\" // To position the delete icon\r\n              >\r\n                {/* Image Thumbnail */}\r\n                <Box\r\n                  as=\"img\"\r\n                  src={\r\n                    image instanceof File ? URL.createObjectURL(image) : image\r\n                  }\r\n                  width=\"225px\"\r\n                  height=\"225px\"\r\n                  object-fit=\"cover\"\r\n                  border-radius=\"5px\"\r\n                />\r\n                {/* Delete Icon */}\r\n                <Icon\r\n                  category=\"md\"\r\n                  icon={MdDeleteSweep}\r\n                  size=\"24px\"\r\n                  color=\"#ff0000\"\r\n                  position=\"absolute\"\r\n                  top=\"5px\"\r\n                  right=\"5px\"\r\n                  onClick={() => handleDeleteImage(index)}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"rgba(255,255,255,0.7)\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                  aria-label={`Delete image ${index + 1}`}\r\n                />\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Audio Recording Section */}\r\n        <Text margin=\"15px 0px 15px 0px\">Record Audio</Text>\r\n        <AudioRecorder\r\n          handleAudioUpload={handleAudioUpload}\r\n          handleDeleteAudio={handleDeleteAudio}\r\n          audioLink={audioLink}\r\n        />\r\n\r\n        {/* Pieces Section */}\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"space-between\"\r\n        >\r\n          <Text margin=\"15px 0px 15px 0px\">Add Items</Text>\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdNoteAdd}\r\n            size=\"32px\"\r\n            margin=\"16px 0px 16px 0px\"\r\n            onClick={addPieceRow}\r\n            style={{ cursor: \"pointer\" }}\r\n            aria-label=\"Add Piece\"\r\n          />\r\n        </Box>\r\n\r\n        {pieces.length > 0 && (\r\n          <>\r\n            {pieces.map((piece, index) => (\r\n              <Box\r\n                key={index}\r\n                display=\"flex\"\r\n                align-items=\"center\"\r\n                margin=\"10px 0\"\r\n              >\r\n                <Text width=\"5%\" textAlign=\"center\">\r\n                  {index + 1}\r\n                </Text>\r\n                <Select\r\n                  value={piece.type}\r\n                  onChange={(e) => handleTypeChange(index, e.target.value)}\r\n                  background=\"white\"\r\n                  width=\"20%\"\r\n                  padding=\"5px\"\r\n                  fontSize=\"16px\"\r\n                  margin=\"0 10px\"\r\n                >\r\n                  <option value=\"Digital Printing\">Digital Printing</option>\r\n                  <option value=\"Offset Printing\">Offset Printing</option>\r\n                  <option value=\"Packaging\">Packaging</option>\r\n                  <option value=\"Others\">Others</option>\r\n                </Select>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={piece.quantity}\r\n                  onChange={(e) => handleQuantityChange(index, e.target.value)}\r\n                  width=\"20%\"\r\n                  min=\"1\"\r\n                  background=\"white\"\r\n                  padding=\"5px\"\r\n                  margin=\"0 10px\"\r\n                />\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Remarks\"\r\n                  value={piece.remarks}\r\n                  onChange={(e) => handleRemarksChange(index, e.target.value)}\r\n                  width=\"40%\"\r\n                  background=\"white\"\r\n                  padding=\"5px\"\r\n                  margin=\"0 10px\"\r\n                />\r\n                <Icon\r\n                  category=\"md\"\r\n                  icon={MdDeleteSweep}\r\n                  size=\"24px\"\r\n                  color=\"#ff0000\"\r\n                  onClick={() => removePieceRow(index)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  aria-label={`Delete piece ${index + 1}`}\r\n                />\r\n              </Box>\r\n            ))}\r\n            <Text margin=\"15px 0px 15px 0px\">\r\n              Total Number of Items: {totalPieces}\r\n            </Text>\r\n          </>\r\n        )}\r\n\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Deadline Section */}\r\n        <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n        <Input\r\n          type=\"date\"\r\n          value={deadlineDate.toISOString().split(\"T\")[0]}\r\n          onChange={(e) => {\r\n            setDeadlineDate(new Date(e.target.value));\r\n          }}\r\n          width=\"40%\"\r\n          background=\"white\"\r\n          padding=\"5px\"\r\n          margin=\"0 10px\"\r\n          required\r\n        />\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n        {/* Submit Button */}\r\n        <Button\r\n          onClick={handleSubmitOrder}\r\n          margin=\"40px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n        >\r\n          Submit Order\r\n        </Button>\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n}\r\n","// Import necessary modules and components\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdNoteAdd, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  fetchOrderById,\r\n  editOrderById,\r\n  uploadImage,\r\n  uploadAudio,\r\n  deleteImageFromStorage, // Import delete functions (to be implemented)\r\n  deleteAudioFromStorage, // Import delete functions (to be implemented)\r\n} from \"../utils/firebaseConfig\"; // Import Firebase functions\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\nimport Footer from \"../utils/footer\";\r\n// Helper function to extract the UUID from the URL query string\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\n// UUID generation function\r\nconst generateUUID = () => {\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let result = \"\";\r\n  for (let i = 0; i < 7; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\n// WhatsApp message sending function\r\nconst sendWhatsAppMessage = (phoneNumber, orderUUID) => {\r\n  const message = `Hi, your order with UUID: ${orderUUID} has been successfully placed.`;\r\n  console.log(\r\n    `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n      message\r\n    )}`\r\n  );\r\n  // Uncomment the lines below to enable WhatsApp message sending\r\n  // const whatsappAPIUrl = `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n  //   message\r\n  // )}`;\r\n  // window.open(whatsappAPIUrl, \"_blank\");\r\n};\r\n\r\n// Custom File Uploader Component\r\nconst FileUploader = ({ handleFile }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    handleFile(files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"button-upload\"\r\n        onClick={handleClick}\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n      >\r\n        Upload Images\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        accept=\"image/*\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Audio Recorder Component with Deletion Capability\r\nconst AudioRecorder = ({\r\n  handleAudioUpload,\r\n  handleDeleteAudio,\r\n  audioLink,\r\n}) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunks = useRef([]);\r\n\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = mediaRecorder;\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        audioChunks.current.push(event.data);\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks.current, { type: \"audio/wav\" });\r\n        const audioURL = await handleAudioUpload(audioBlob);\r\n        audioChunks.current = [];\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      alert(\"Error accessing microphone\");\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n        onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n      >\r\n        {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n      </Button>\r\n      {audioLink && (\r\n        <Box display=\"flex\" align-items=\"center\">\r\n          <audio controls>\r\n            <source src={audioLink} type=\"audio/wav\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdDeleteSweep}\r\n            size=\"24px\"\r\n            color=\"#ff0000\"\r\n            margin=\"0 0 0 10px\"\r\n            onClick={handleDeleteAudio}\r\n            style={{ cursor: \"pointer\" }}\r\n            aria-label=\"Delete Audio\"\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\"); // Extract UUID from URL\r\n  const [orderData, setOrderData] = useState(null); // To store fetched order data\r\n  const [pieces, setPieces] = useState([]); // For pieces list\r\n  const [progress, setProgress] = useState(\"\"); // To track the progress status\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const [error, setError] = useState(null); // Add error state\r\n  const [imageUrls, setImageUrls] = useState([]); // For storing image URLs\r\n  const [audioURL, setAudioURL] = useState(null); // For storing audio URLs\r\n  const [modalOpen, setModalOpen] = useState(false); // For modal state\r\n  const [modalImageUrl, setModalImageUrl] = useState(\"\"); // For the image in modal\r\n  const [deadline, setDeadline] = useState(\"\"); // For storing the deadline date\r\n\r\n  // Helper function to format dates\r\n  const convertToInputDateFormat = (dateString) => {\r\n    // Parse the date string, e.g., \"November 8, 2024\"\r\n    const parsedDate = new Date(dateString);\r\n\r\n    // Format as YYYY-MM-DD for input date compatibility\r\n    const year = parsedDate.getFullYear();\r\n    const month = `0${parsedDate.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${parsedDate.getDate()}`.slice(-2);\r\n\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Fetch order details on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchOrderById(uuid, (data) => {\r\n            if (data) {\r\n              setOrderData(data);\r\n              setPieces(data?.pieces?.details || []);\r\n              setProgress(data?.progress || \"Pre-press\");\r\n              setImageUrls(data.images || []);\r\n              setAudioURL(data.audio_link || null);\r\n              setDeadline(convertToInputDateFormat(data.deadline_raw) || \"\"); // Set deadline if available\r\n            } else {\r\n              setError(\"Order not found or invalid UUID.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid order UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching order data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  // Handle file upload for additional images\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function\r\n      );\r\n      setImageUrls((prevUrls) => [...prevUrls, ...uploadedImageUrls]);\r\n    } catch (error) {\r\n      console.error(\"Error uploading images:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle audio upload\r\n  const handleAudioUpload = async (audioBlob) => {\r\n    try {\r\n      const audioLink = await uploadAudio(audioBlob);\r\n      setAudioURL(audioLink);\r\n      return audioLink;\r\n    } catch (error) {\r\n      console.error(\"Error uploading audio:\", error);\r\n      alert(\"Failed to upload audio. Please try again.\");\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  // Handle deleting an image\r\n  const handleDeleteImage = async (index) => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this image? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        const imageToDelete = imageUrls[index];\r\n        // If imageToDelete is a URL, extract the storage path if possible\r\n        // This depends on how your image URLs are structured\r\n        // Example: Assuming image URLs contain the storage path after a specific base URL\r\n        const storagePath = extractStoragePathFromURL(imageToDelete); // Implement this function based on your URL structure\r\n        if (storagePath) {\r\n          await deleteImageFromStorage(storagePath); // Implement deleteImageFromStorage in firebaseConfig.js\r\n        }\r\n        const updatedImages = imageUrls.filter((_, i) => i !== index);\r\n        setImageUrls(updatedImages);\r\n      } catch (error) {\r\n        console.error(\"Error deleting image:\", error);\r\n        alert(\"Failed to delete image. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Helper function to extract storage path from URL (Implementation depends on your storage setup)\r\n  const extractStoragePathFromURL = (url) => {\r\n    // Example implementation:\r\n    // Assuming your Firebase storage URLs are structured as:\r\n    // https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/path%2Fto%2Fimage.jpg?...\r\n    // You need to extract 'path/to/image.jpg'\r\n    try {\r\n      const baseURL = \"https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/\";\r\n      if (url.startsWith(baseURL)) {\r\n        const encodedPath = url.substring(baseURL.length, url.indexOf(\"?\"));\r\n        return decodeURIComponent(encodedPath);\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error extracting storage path:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Handle deleting audio\r\n  const handleDeleteAudio = async () => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete the audio recording? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        if (audioURL) {\r\n          // Extract storage path from audio URL\r\n          const storagePath = extractStoragePathFromURL(audioURL); // Implement this function based on your URL structure\r\n          if (storagePath) {\r\n            await deleteAudioFromStorage(storagePath); // Implement deleteAudioFromStorage in firebaseConfig.js\r\n          }\r\n          setAudioURL(null);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error deleting audio:\", error);\r\n        alert(\"Failed to delete audio. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Audio Recorder Component with Deletion Capability\r\n  const AudioRecorderWithDeletion = ({\r\n    handleAudioUpload,\r\n    handleDeleteAudio,\r\n    audioLink,\r\n  }) => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const mediaRecorderRef = useRef(null);\r\n    const audioChunks = useRef([]);\r\n\r\n    const handleStartRecording = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        mediaRecorderRef.current = mediaRecorder;\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          audioChunks.current.push(event.data);\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunks.current, { type: \"audio/wav\" });\r\n          const audioURL = await handleAudioUpload(audioBlob);\r\n          audioChunks.current = [];\r\n        };\r\n\r\n        mediaRecorder.start();\r\n        setIsRecording(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing microphone:\", error);\r\n        alert(\"Error accessing microphone\");\r\n      }\r\n    };\r\n\r\n    const handleStopRecording = () => {\r\n      if (mediaRecorderRef.current) {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n          onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n        >\r\n          {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n        </Button>\r\n        {audioLink && (\r\n          <Box display=\"flex\" align-items=\"center\">\r\n            <audio controls>\r\n              <source src={audioLink} type=\"audio/wav\" />\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdDeleteSweep}\r\n              size=\"24px\"\r\n              color=\"#ff0000\"\r\n              margin=\"0 0 0 10px\"\r\n              onClick={handleDeleteAudio}\r\n              style={{ cursor: \"pointer\" }}\r\n              aria-label=\"Delete Audio\"\r\n            />\r\n          </Box>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Function to format phone number for WhatsApp API\r\n  const formatPhoneNumber = (phone) => {\r\n    // Remove any non-digit characters\r\n    return phone.replace(/\\D/g, \"\");\r\n  };\r\n\r\n  // Handle WhatsApp click\r\n  const handleWhatsAppClick = () => {\r\n    const message = `Your order has been confirmed.\\nVisit https://internal.gundojus.in/#/orders/view?uuid=${uuid} to check the progress.\\n\\n- Sujatha Reddy`;\r\n    const phoneNumber = formatPhoneNumber(orderData.phone_number);\r\n    const url = `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n      message\r\n    )}`;\r\n    // window.open(url, \"_blank\");\r\n  };\r\n\r\n  // Handle updating order data in Firebase\r\n  const handleSaveOrder = async () => {\r\n    try {\r\n      const convertToReadableDate = (inputDate) => {\r\n        // Parse the input date string\r\n        const date = new Date(inputDate);\r\n\r\n        // Array of month names\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n\r\n        // Get day, month, and year\r\n        const day = date.getDate();\r\n        const month = monthNames[date.getMonth()]; // Get the month name\r\n        const year = date.getFullYear();\r\n\r\n        return `${month} ${day}, ${year}`;\r\n      };\r\n\r\n      const updatedOrderData = {\r\n        ...orderData,\r\n        pieces: {\r\n          ...orderData.pieces,\r\n          details: pieces,\r\n          number_of_pieces: totalPieces,\r\n        },\r\n        progress,\r\n        images: imageUrls, // Include updated images array\r\n        audio_link: audioURL, // Include audio URL\r\n        deadline_raw: deadline, // Include deadline in YYYY-MM-DD format\r\n        deadline_formatted: convertToReadableDate(deadline), // Include deadline formatted\r\n      };\r\n      await editOrderById(uuid, updatedOrderData);\r\n      alert(\"Order updated successfully\");\r\n      history.push(\"/orders\");\r\n    } catch (err) {\r\n      console.error(\"Error updating order:\", err);\r\n      alert(\"Error updating order. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Open image in modal\r\n  const openImageInModal = (url) => {\r\n    setModalImageUrl(url);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setModalImageUrl(\"\");\r\n  };\r\n\r\n  // Handle adding a new piece row\r\n  const addPieceRow = () => {\r\n    setPieces([...pieces, { type: \"Digital Printing\", quantity: 1, remarks: \"\" }]);\r\n  };\r\n\r\n  // Handle removing a piece row\r\n  const removePieceRow = (index) => {\r\n    setPieces(pieces.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Handle piece type change\r\n  const handleTypeChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, type: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  // Handle piece quantity change\r\n  const handleQuantityChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, quantity: Number(value) } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  // Handle piece remarks change\r\n  const handleRemarksChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, remarks: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  // Calculate total pieces\r\n  const totalPieces = pieces.reduce((acc, piece) => acc + piece.quantity, 0);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-edit\"} />\r\n        <Helmet>\r\n          <title>Edit Order</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n          <Text>Loading...</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-edit\"} />\r\n        <Helmet>\r\n          <title>Edit Order</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n          <Text>{error}</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-edit\"} />\r\n      <Helmet>\r\n        <title>Edit Order</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Main Content */}\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n        {/* Begin Fixed-Width Container */}\r\n        <Box\r\n          min-width=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\" // Optional: Add horizontal padding\r\n        >\r\n          {/* Header Section */}\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            justify-content=\"center\"\r\n            position=\"relative\"\r\n          >\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdArrowBack}\r\n              size=\"40px\"\r\n              margin=\"16px\"\r\n              padding=\"0px 0px 16px 0px\"\r\n              onClick={() => history.push(\"/orders\")}\r\n              style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n              aria-label=\"Back to Orders\"\r\n            />\r\n            <Text\r\n              margin=\"0px 0px 20px 0px\"\r\n              text-align=\"center\"\r\n              font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n              color=\"--dark\"\r\n              sm-margin=\"0px 0px 30px 0px\"\r\n            >\r\n              Edit Order\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n            {/* Customer Name */}\r\n            <Box display=\"flex\" align-items=\"center\" margin=\"15px 0px 15px 0px\">\r\n              <Text margin=\"0\">Customer Name</Text>\r\n              {/* <FaWhatsapp\r\n                size=\"24px\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"10px\" }}\r\n                onClick={handleWhatsAppClick}\r\n                aria-label=\"Send WhatsApp Message\"\r\n              /> */}\r\n            </Box>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={orderData.customer_name || \"\"}\r\n              readOnly\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Phone Number */}\r\n            <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={orderData.phone_number || \"\"}\r\n              readOnly\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Progress */}\r\n            <Text margin=\"15px 0px 15px 0px\">Progress</Text>\r\n            <Select\r\n              value={progress}\r\n              onChange={(e) => setProgress(e.target.value)}\r\n              background=\"white\"\r\n              width=\"50%\"\r\n              padding=\"5px\"\r\n              border-radius=\"7.5px\"\r\n            >\r\n              <option value=\"Pre-press\">Pre-press</option>\r\n                    <option value=\"Press\">Press</option>\r\n                    <option value=\"Post-press\">Post-press</option>\r\n                    <option value=\"Delivered\">Delivered</option>\r\n                    <option value=\"Payment Pending\">Payment Pending</option>\r\n                    <option value=\"Payment Received\">Payment Received</option>\r\n            </Select>\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Pieces Section */}\r\n            <Box\r\n              display=\"flex\"\r\n              align-items=\"center\"\r\n              justify-content=\"space-between\"\r\n            >\r\n              <Text margin=\"15px 0px 15px 0px\">Add Pieces</Text>\r\n              <Icon\r\n                category=\"md\"\r\n                icon={MdNoteAdd}\r\n                size=\"32px\"\r\n                margin=\"16px 0px 16px 0px\"\r\n                onClick={addPieceRow}\r\n                style={{ cursor: \"pointer\" }}\r\n                aria-label=\"Add Piece\"\r\n              />\r\n            </Box>\r\n            {pieces.length > 0 && (\r\n              <>\r\n                {pieces.map((piece, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    display=\"flex\"\r\n                    align-items=\"center\"\r\n                    margin=\"10px 0\"\r\n                  >\r\n                    <Text width=\"5%\" textAlign=\"center\">\r\n                      {index + 1}\r\n                    </Text>\r\n                    <Select\r\n                      value={piece.type}\r\n                      onChange={(e) => handleTypeChange(index, e.target.value)}\r\n                      background=\"white\"\r\n                      width=\"20%\"\r\n                      padding=\"5px\"\r\n                      margin=\"0 10px\"\r\n                    >\r\n                      <option value=\"Digital Printing\">Digital Printing</option>\r\n                    <option value=\"Offset Printing\">Offset Printing</option>\r\n                    <option value=\"Packaging\">Packaging</option>\r\n                    <option value=\"Others\">Others</option>\r\n                    </Select>\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={piece.quantity}\r\n                      onChange={(e) => handleQuantityChange(index, e.target.value)}\r\n                      width=\"20%\"\r\n                      min=\"1\"\r\n                      background=\"white\"\r\n                      padding=\"5px\"\r\n                      margin=\"0 10px\"\r\n                    />\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Remarks\"\r\n                      value={piece.remarks}\r\n                      onChange={(e) => handleRemarksChange(index, e.target.value)}\r\n                      width=\"40%\"\r\n                      background=\"white\"\r\n                      padding=\"5px\"\r\n                      margin=\"0 10px\"\r\n                    />\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"24px\"\r\n                      color=\"#ff0000\"\r\n                      onClick={() => removePieceRow(index)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      aria-label={`Delete Piece ${index + 1}`}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n                <Text margin=\"15px 0px 15px 0px\">\r\n                  Total Number of Items : {totalPieces}\r\n                </Text>\r\n              </>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Images Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Images</Text>\r\n            <FileUploader handleFile={handleFileUpload} />\r\n            {imageUrls.length > 0 && (\r\n              <Box\r\n                display=\"grid\"\r\n                grid-template-columns={`repeat(${Math.min(\r\n                  imageUrls.length,\r\n                  4\r\n                )}, 225px)`}\r\n                grid-auto-rows=\"225px\"\r\n                grid-gap=\"15px\"\r\n                width={`${\r\n                  Math.min(imageUrls.length, 4) * 225 +\r\n                  (Math.min(imageUrls.length, 4) - 1) * 15\r\n                }px`}\r\n                overflow=\"auto\"\r\n                padding=\"15px\"\r\n                border=\"1px solid #ccc\"\r\n                margin=\"15px 0\"\r\n              >\r\n                {imageUrls.map((url, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    as=\"div\"\r\n                    position=\"relative\" // To position the delete icon\r\n                  >\r\n                    {/* Image Thumbnail */}\r\n                    <Box\r\n                      as=\"img\"\r\n                      src={url}\r\n                      width=\"225px\"\r\n                      height=\"225px\"\r\n                      object-fit=\"cover\"\r\n                      border-radius=\"5px\"\r\n                      onClick={() => openImageInModal(url)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      alt={`Order Image ${index + 1}`}\r\n                    />\r\n                    {/* Delete Icon */}\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"24px\"\r\n                      color=\"#ff0000\"\r\n                      position=\"absolute\"\r\n                      top=\"5px\"\r\n                      right=\"5px\"\r\n                      onClick={() => handleDeleteImage(index)}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"rgba(255,255,255,0.7)\",\r\n                        borderRadius: \"50%\",\r\n                      }}\r\n                      aria-label={`Delete Image ${index + 1}`}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Audio Recording Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Audio</Text>\r\n            <AudioRecorderWithDeletion\r\n              handleAudioUpload={handleAudioUpload}\r\n              handleDeleteAudio={handleDeleteAudio}\r\n              audioLink={audioURL}\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Deadline Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n            <Input\r\n              type=\"date\"\r\n              value={deadline}\r\n              onChange={(e) => {\r\n                setDeadline(e.target.value);\r\n              }}\r\n              width=\"40%\"\r\n              background=\"white\"\r\n              padding=\"5px\"\r\n              margin=\"0 10px\"\r\n              required\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Save Button */}\r\n            <Button\r\n              onClick={handleSaveOrder}\r\n              margin=\"40px 0\"\r\n              background=\"#cb7731\"\r\n              color=\"white\"\r\n              padding=\"10px 20px\"\r\n              border-radius=\"7.5px\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </Box>\r\n          {/* End Fixed-Width Container */}\r\n        </Box>\r\n\r\n        {/* Image Modal */}\r\n        {modalOpen && (\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              zIndex: 1000,\r\n            }}\r\n            onClick={closeModal}\r\n          >\r\n            <img\r\n              src={modalImageUrl}\r\n              alt=\"Full Size\"\r\n              style={{ maxHeight: \"90%\", maxWidth: \"90%\" }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n          </div>\r\n        )}\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Input, Box, Section, Hr } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { fetchOrderById } from \"../utils/firebaseConfig\"; // Import the function to fetch order data from Firebase\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\"; // Import ProgressBar\r\nimport Footer from \"../utils/footer\";\r\n// Helper function to extract UUID from the URL\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\n// Function to get progress color based on status\r\nconst getProgressColor = (progress) => {\r\n  switch (progress) {\r\n    case \"Pre-press\":\r\n      return \"#ff4d4d\"; // Bright red (start)\r\n\r\n    case \"Press\":\r\n      return \"#ff7518\"; // Reddish-orange\r\n\r\n    case \"Post-press\":\r\n      return \"#ffaa00\"; // Orange\r\n\r\n    case \"Delivered\":\r\n      return \"#ffd700\"; // Yellow\r\n\r\n    case \"Payment Pending\":\r\n      return \"#c0c000\"; // Yellow-green (waiting)\r\n\r\n    case \"Payment Received\":\r\n      return \"#31a931\"; // Green (final/complete)\r\n\r\n    default:\r\n      return \"#ff0000\"; // Default red for unknown statuses\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default () => {\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\"); // Extract UUID from URL\r\n  const [orderData, setOrderData] = useState(null); // To store the fetched order data\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const [error, setError] = useState(null); // Add error state\r\n\r\n  // Fetch order details on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchOrderById(uuid, (data) => {\r\n            if (data) {\r\n              setOrderData(data); // Set the fetched data into state\r\n            } else {\r\n              setError(\"Order not found.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid order UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching order data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  // Show loading message if data is not yet fetched\r\n  if (loading) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n        <Text>Loading order details...</Text>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n        <Text>{error}</Text> {/* Display error if occurred */}\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  // Map the progress to numeric values for progress bar\r\n  const progressLevels = {\r\n    Pending: 0,\r\n    \"In Progress\": 50,\r\n    Completed: 100,\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n      <Helmet>\r\n        <title>View Order</title><link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"View-Order\">\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            Order Details\r\n          </Text>\r\n        </Box>\r\n\r\n        {/* Customer Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Customer Name</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.customer_name || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.phone_number || \"\"}\r\n            readOnly\r\n          />\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Order Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Order Creation Date</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.orderCreationDate || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Order Creation Time</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.orderCreationTime || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.deadline_raw || \"\"}\r\n            readOnly\r\n          />\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Pieces Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Pieces</Text>\r\n          {orderData.pieces?.details?.map((piece, index) => (\r\n            <Box key={index} display=\"flex\" align-items=\"center\" margin=\"5px 0\">\r\n              <Text width=\"200px\">{piece.type}</Text>\r\n              <Text>Quantity: {piece.quantity}</Text>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Progress Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Progress</Text>\r\n          <ProgressBar\r\n            completed={progressLevels[orderData.progress] || 0}\r\n            bgColor={getProgressColor(orderData.progress)}\r\n            labelAlignment=\"center\"\r\n            labelColor=\"#ffffff\"\r\n            width=\"50%\"\r\n          />\r\n        </Box>\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\"; // Firebase database imports\r\nimport { NavBar } from \"../utils/navbar\";\r\nimport Footer from \"../utils/footer\";\r\n// Firebase configuration is initialized elsewhere in firebaseConfig.js\r\n\r\n// Function to add a new user to the database\r\nconst addUserToDatabase = async (email, password, role) => {\r\n  const db = getDatabase();\r\n  const usersRef = dbRef(db, \"vamsi/users\");\r\n  const newUserRef = push(usersRef);\r\n  await set(newUserRef, {\r\n    email,\r\n    password,\r\n    role,\r\n  });\r\n  alert(\"User added successfully\");\r\n};\r\n\r\nexport default () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"manager\"); // Default role is set to manager\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!email || !password) {\r\n      alert(\"Please fill in both email and password\");\r\n      return;\r\n    }\r\n    addUserToDatabase(email, password, role); // Call the function to add user\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setRole(\"manager\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"sudo-add-users\"} />\r\n      <Helmet>\r\n        <title>Add New User</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Add Users\"} />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Add-User\">\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            Add New User\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Email</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Password</Text>\r\n          <Input\r\n            type=\"password\"\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Role</Text>\r\n          <Select\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n            background=\"white\"\r\n            width=\"50%\"\r\n            padding=\"5px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            <option value=\"manager\">Manager</option>\r\n            <option value=\"sudo\">Sudo</option>\r\n          </Select>\r\n          <br />\r\n          <Button\r\n            onClick={handleSubmit}\r\n            margin=\"40px 0\"\r\n            background=\"#cb7731\"\r\n            color=\"white\"\r\n            padding=\"10px 20px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            Add User\r\n          </Button>\r\n        </Box>\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Link, Text, Box, Section } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { RawHtml, Override } from \"@quarkly/components\";\r\nimport Footer from \"./footer\";\r\nexport default (() => {\r\n\treturn <Theme theme={theme}>\r\n\t\t<GlobalQuarklyPageStyles pageUrl={\"404\"} />\r\n\t\t<Helmet>\r\n\t\t\t<title>\r\n\t\t\t\tError 404\r\n\t\t\t</title><link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n\t\t</Helmet>\r\n\t\t<Section padding=\"88px 0 88px 0\" min-height=\"100vh\" quarkly-title=\"404-1\">\r\n\t\t\t<Override slot=\"SectionContent\" max-width=\"1220px\" justify-content=\"center\" />\r\n\t\t\t<Box align-items=\"center\" display=\"flex\" justify-content=\"center\" flex-direction=\"column\">\r\n\t\t\t\t<Text margin=\"0px 0px 0px 0px\" font=\"--headline3\" color=\"--primary\">\r\n\t\t\t\t\t404\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tcolor=\"--dark\"\r\n\t\t\t\t\tmargin=\"8px 0px 16px 0px\"\r\n\t\t\t\t\tsm-font=\"normal 700 42px/1.2 &quot;Source Sans Pro&quot;, sans-serif\"\r\n\t\t\t\t\tfont=\"--headline1\"\r\n\t\t\t\t\tletter-spacing=\"-0.025em\"\r\n\t\t\t\t>\r\n\t\t\t\t\tPage not found\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tlg-width=\"80%\"\r\n\t\t\t\t\tfont=\"--lead\"\r\n\t\t\t\t\tcolor=\"--dark\"\r\n\t\t\t\t\tmargin=\"0px 0px 40px 0px\"\r\n\t\t\t\t\ttext-align=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSorry, we couldn’t find the page you’re looking for.\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tfont=\"--lead\"\r\n\t\t\t\t\tpadding=\"12px 24px 12px 24px\"\r\n\t\t\t\t\tbackground=\"--color-primary\"\r\n\t\t\t\t\tborder-radius=\"8px\"\r\n\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\ttext-decoration-line=\"initial\"\r\n\t\t\t\t\tcolor=\"--light\"\r\n\t\t\t\t\ttransition=\"--opacityOut\"\r\n\t\t\t\t\thover-opacity=\"0.7\"\r\n\t\t\t\t>\r\n\t\t\t\t\tGo back to home\r\n\t\t\t\t</Link>\r\n\t\t\t</Box>\r\n\t\t</Section>\r\n\t\t\r\n\t\t<RawHtml>\r\n\t\t\t<style place={\"endOfHead\"} rawKey={\"66f6d1359710450018a331b3\"}>\r\n\t\t\t\t{\":root {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  box-sizing: inherit;\\n}\"}\r\n\t\t\t</style>\r\n\t\t</RawHtml>\r\n\t\t{/* <Footer /> */}\r\n\t</Theme>;\r\n});","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Text, Theme, Section, Hr } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport theme from \"theme\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./mobile-month-view.css\";\r\nimport { fetchOrdersByDate } from \"../utils/firebaseConfig\";\r\nimport { NavBar } from \"../utils/navbar\";\r\nimport Footer from \"../utils/footer\";\r\n\r\nconst CalendarPage = () => {\r\n  const [myEvents, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [toastMessage, setToastMessage] = useState(null);\r\n\r\n  // Function to format date as YYYY-MM-DD based on local timezone\r\n  const formatDateLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = `0${date.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${date.getDate()}`.slice(-2);\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Function to determine the color based on progress status\r\n  const getStatusColor = (progress) => {\r\n  switch (progress) {\r\n    case \"Pre-press\":\r\n      return \"#ff4d4d\"; // Bright red (start)\r\n\r\n    case \"Press\":\r\n      return \"#ff7518\"; // Reddish-orange\r\n\r\n    case \"Post-press\":\r\n      return \"#ffaa00\"; // Orange\r\n\r\n    case \"Delivered\":\r\n      return \"#ffd700\"; // Yellow\r\n\r\n    case \"Payment Pending\":\r\n      return \"#c0c000\"; // Yellow-green (waiting)\r\n\r\n    case \"Payment Received\":\r\n      return \"#31a931\"; // Green (final/complete)\r\n\r\n    default:\r\n      return \"#ff0000\"; // Default red for unknown statuses\r\n  }\r\n  \r\n};\r\n  // Function to load orders for all dates in the current month\r\n  const loadEventsForMonth = async (date) => {\r\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const endOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n    // Generate all dates in the current month in 'YYYY-MM-DD' format\r\n    const datesInMonth = [];\r\n    for (\r\n      let d = new Date(startOfMonth);\r\n      d <= endOfMonth;\r\n      d.setDate(d.getDate() + 1)\r\n    ) {\r\n      datesInMonth.push(formatDateLocal(new Date(d)));\r\n    }\r\n\r\n    // Fetch orders for each date\r\n    const allOrders = [];\r\n    for (const dateStr of datesInMonth) {\r\n      const orders = await fetchOrdersByDate(dateStr);\r\n      if (orders.length > 0) {\r\n        allOrders.push(...orders);\r\n      }\r\n    }\r\n\r\n    setEvents(allOrders);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load events when the component mounts and whenever the month changes\r\n    loadEventsForMonth(selectedDate);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  // Function to filter events for the selected date\r\n  const getEventsForDate = (date) => {\r\n    const formattedDate = formatDateLocal(date); // \"YYYY-MM-DD\"\r\n    return myEvents.filter((event) => event.deadline_raw === formattedDate);\r\n  };\r\n\r\n  // Function to handle date selection\r\n  const onDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    const events = getEventsForDate(date);\r\n    // Filter out completed orders\r\n    const pendingEvents = events.filter(\r\n      (event) => event.progress !== \"Payment Received\"\r\n    );\r\n    if (pendingEvents.length > 0) {\r\n      const totalPieces = pendingEvents.reduce(\r\n        (sum, event) => sum + event.pieces.number_of_pieces,\r\n        0\r\n      );\r\n      setToastMessage(\r\n        `You have ${pendingEvents.length} pending order(s) with a total of ${totalPieces} piece(s) on ${date.toDateString()}`\r\n      );\r\n    } else {\r\n      setToastMessage(\"No pending orders on this day\");\r\n    }\r\n  };\r\n\r\n  // Function to add markers on dates with pending or in-progress events\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === \"month\") {\r\n      const events = getEventsForDate(date);\r\n      const hasPending = events.some(\r\n        (event) => event.progress !== \"Payment Received\"\r\n      );\r\n      if (hasPending) {\r\n        return (\r\n          <Box\r\n            width=\"8px\"\r\n            height=\"8px\"\r\n            borderRadius=\"50%\"\r\n            background=\"red\"\r\n            margin=\"0 auto\"\r\n            marginTop=\"2px\"\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <Helmet>\r\n        <title>Calendar</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Navigation Header */}\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Calendar\"} />\r\n\r\n      {/* Main Calendar Content */}\r\n      <Section padding=\"20px 0 20px 0\">\r\n        <Text\r\n          font=\"normal 500 48px/1.2 --fontFamily-serifGeorgia\"\r\n          text-align=\"center\"\r\n        >\r\n          Calendar\r\n        </Text>\r\n\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Centered Calendar */}\r\n          <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n            <Calendar\r\n              onChange={onDateChange}\r\n              value={selectedDate}\r\n              tileContent={tileContent}\r\n              onActiveStartDateChange={({ activeStartDate }) =>\r\n                loadEventsForMonth(activeStartDate)\r\n              }\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Section>\r\n      <Section padding=\"20px 0 0px 0\">\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Conditionally render the table only if there are events */}\r\n          {getEventsForDate(selectedDate).length > 0 && (\r\n            <Box marginTop=\"30px\" width=\"100%\">\r\n              <Box\r\n                as=\"table\"\r\n                width=\"100%\"\r\n                borderCollapse=\"collapse\"\r\n                marginTop=\"30px\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Customer Name\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Items\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Created On\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Progress\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getEventsForDate(selectedDate).map((event, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.customer_name}\r\n                      </td>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.pieces.number_of_pieces}\r\n                      </td>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.orderCreationDate}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          padding: \"10px\",\r\n                          textAlign: \"left\",\r\n                          color: getStatusColor(event.progress),\r\n                        }}\r\n                      >\r\n                        {event.progress}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        \r\n        {/* Toast Notification */}\r\n        {toastMessage && (\r\n          <Box\r\n            background=\"--color-lightD2\"\r\n            padding=\"10px\"\r\n            borderRadius=\"5px\"\r\n            textAlign=\"center\"\r\n            marginTop=\"20px\"\r\n            onClick={() => setToastMessage(null)} // Close toast on click\r\n            cursor=\"pointer\"\r\n          >\r\n            {toastMessage}\r\n          </Box>\r\n        )}\r\n      </Section>\r\n      \r\n    </Theme>\r\n  );\r\n  \r\n};\r\n\r\nexport default CalendarPage;\r\n","// Import necessary modules and components\r\nimport React, { useState, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Hr,\r\n  Icon,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\"; // Firebase database imports\r\nimport { NavBar } from \"../utils/navbar\"; // Import your NavBar component\r\nimport {\r\n  uploadImage,\r\n  addCustomerToDatabase,\r\n  deleteImageFromStorage, // Import delete function (to be implemented)\r\n} from \"../utils/firebaseConfig\"; // Import the uploadImage function\r\nimport { MdDeleteSweep, MdArrowBack } from \"react-icons/md\"; // Import Delete Icon\r\nimport Footer from \"../utils/footer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst generateUUID = () => {\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let result = \"\";\r\n  for (let i = 0; i < 7; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\n// The main component for adding a new customer\r\nexport default () => {\r\n  const history = useHistory();\r\n  // State variables for customer information\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"+91\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [images, setImages] = useState([]); // For storing measurement images\r\n\r\n  // Function to handle file uploads for measurements\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function from firebaseConfig.js\r\n      );\r\n      setImages((prevImages) => [...prevImages, ...uploadedImageUrls]); // Store URLs in state\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Function to handle deleting an image\r\n  const handleDeleteImage = async (index) => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this measurement image? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        const imageToDelete = images[index];\r\n        // Extract storage path from image URL\r\n        const storagePath = extractStoragePathFromURL(imageToDelete); // Implement based on your URL structure\r\n        if (storagePath) {\r\n          await deleteImageFromStorage(storagePath); // Implement deleteImageFromStorage in firebaseConfig.js\r\n        }\r\n        const updatedImages = images.filter((_, i) => i !== index);\r\n        setImages(updatedImages);\r\n      } catch (error) {\r\n        console.error(\"Error deleting image:\", error);\r\n        alert(\"Failed to delete image. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Helper function to extract storage path from URL (Implementation depends on your storage setup)\r\n  const extractStoragePathFromURL = (url) => {\r\n    // Example implementation:\r\n    // Assuming your Firebase storage URLs are structured as:\r\n    // https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/path%2Fto%2Fimage.jpg?...\r\n    // You need to extract 'path/to/image.jpg'\r\n    try {\r\n      const baseURL = \"https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/\";\r\n      if (url.startsWith(baseURL)) {\r\n        const encodedPath = url.substring(baseURL.length, url.indexOf(\"?\"));\r\n        return decodeURIComponent(encodedPath);\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error extracting storage path:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // FileUploader component for uploading images\r\n  const FileUploader = ({ handleFile }) => {\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const handleClick = () => {\r\n      hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      handleFile(files);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          className=\"button-upload\"\r\n          onClick={handleClick}\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n        >\r\n          Upload Images\r\n        </Button>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleChange}\r\n          ref={hiddenFileInput}\r\n          style={{ display: \"none\" }}\r\n          multiple\r\n          accept=\"image/*\"\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Function to add the customer to Firebase Realtime Database\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!customerName || !phoneNumber) {\r\n      alert(\"Please fill in customer name and phone number\");\r\n      return;\r\n    }\r\n    const fullPhoneNumber = `${countryCode}${phoneNumber}`;\r\n    try {\r\n      await addCustomerToDatabase(generateUUID(), customerName, countryCode, phoneNumber, images);\r\n      // Reset form fields after successful submission\r\n      setCustomerName(\"\");\r\n      setPhoneNumber(\"\");\r\n      setCountryCode(\"+91\");\r\n      setImages([]);\r\n      alert(\"Customer added successfully!\");\r\n      history.push(\"/customers/view\");\r\n    } catch (error) {\r\n      console.error(\"Error adding customer:\", error);\r\n      alert(\"Failed to add customer. Please try again.\");\r\n      history.push(\"/customers/view\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"add-customer\"} />\r\n      <Helmet>\r\n        <title>Add New Customer</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Navigation Bar */}\r\n      <NavBar />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Add-Customer\">\r\n      \r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdArrowBack}\r\n            size=\"40px\"\r\n            margin=\"16px\"\r\n            padding=\"0px 0px 16px 0px\"\r\n            onClick={() => history.push(\"/customers/view\")}\r\n            style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n            aria-label=\"Back to Orders\"\r\n          />\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            Add New Customer\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          {/* Customer Name Input */}\r\n          <Text margin=\"15px 0px 15px 0px\">Customer Name</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={customerName}\r\n            onChange={(e) => setCustomerName(e.target.value)}\r\n            aria-label=\"Customer Name\"\r\n          />\r\n\r\n          {/* Phone Number Input */}\r\n          <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n          <Box\r\n            min-width=\"100px\"\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            padding=\"15px 0px 15px 0px\"\r\n          >\r\n            <Input\r\n              display=\"inline-block\"\r\n              background=\"white\"\r\n              value={countryCode}\r\n              border-color=\"--color-darkL2\"\r\n              width=\"5%\"\r\n              padding=\"6px 8px\"\r\n              border-radius=\"7.5px\"\r\n              margin=\"0px 4px 0px 0px\"\r\n              required\r\n              onChange={(e) => setCountryCode(e.target.value)}\r\n              aria-label=\"Country Code\"\r\n            />\r\n            <Input\r\n              display=\"inline-block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              required\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              aria-label=\"Phone Number\"\r\n            />\r\n          </Box>\r\n\r\n          {/* Measurements Upload */}\r\n          <Text margin=\"15px 0px 15px 0px\">Measurements</Text>\r\n          <FileUploader handleFile={handleFileUpload} />\r\n          {images.length > 0 && (\r\n            <Box\r\n              display=\"grid\"\r\n              grid-template-columns={`repeat(${Math.min(images.length, 4)}, 225px)`}\r\n              grid-auto-rows=\"225px\"\r\n              grid-gap=\"15px\"\r\n              width={`${\r\n                Math.min(images.length, 4) * 225 +\r\n                (Math.min(images.length, 4) - 1) * 15\r\n              }px`}\r\n              overflow=\"auto\"\r\n              padding=\"15px\"\r\n              border=\"1px solid #ccc\"\r\n              margin=\"15px 0\"\r\n            >\r\n              {images.map((image, index) => (\r\n                <Box\r\n                  key={index}\r\n                  as=\"div\"\r\n                  position=\"relative\" // To position the delete icon\r\n                >\r\n                  {/* Measurement Image Thumbnail */}\r\n                  <Box\r\n                    as=\"img\"\r\n                    src={image}\r\n                    width=\"225px\"\r\n                    height=\"225px\"\r\n                    object-fit=\"cover\"\r\n                    border-radius=\"5px\"\r\n                    onClick={() => window.open(image, \"_blank\")}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    alt={`Measurement Image ${index + 1}`}\r\n                  />\r\n                  {/* Delete Icon */}\r\n                  <Icon\r\n                    category=\"md\"\r\n                    icon={MdDeleteSweep}\r\n                    size=\"24px\"\r\n                    color=\"#ff0000\"\r\n                    position=\"absolute\"\r\n                    top=\"5px\"\r\n                    right=\"5px\"\r\n                    onClick={() => handleDeleteImage(index)}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      backgroundColor: \"rgba(255,255,255,0.7)\",\r\n                      borderRadius: \"50%\",\r\n                    }}\r\n                    aria-label={`Delete Measurement Image ${index + 1}`}\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Horizontal Rule */}\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          {/* Submit Button */}\r\n          <Button\r\n            onClick={handleSubmit}\r\n            margin=\"40px 0\"\r\n            background=\"#cb7731\"\r\n            color=\"white\"\r\n            padding=\"10px 20px\"\r\n            border-radius=\"7.5px\"\r\n            aria-label=\"Add Customer\"\r\n          >\r\n            Add Customer\r\n          </Button>\r\n        </Box>\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n};\r\n","// CustomersList.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Icon, Box, Section, Strong, Input } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdCreate, MdDeleteSweep, MdPersonAdd } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref as dbRef, onValue } from \"firebase/database\";\r\nimport { deleteCustomerById } from \"../utils/firebaseConfig\";\r\nimport { NavBar } from \"../utils/navbar\";\r\n\r\nconst fetchCustomers = (setCustomers) => {\r\n  const db = getDatabase();\r\n  const customersRef = dbRef(db, \"vamsi/customers\");\r\n\r\n  onValue(customersRef, (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data) {\r\n      const customersArray = Object.keys(data).map((key) => ({\r\n        uuid: key,\r\n        ...data[key],\r\n      }));\r\n      setCustomers(customersArray);\r\n    } else {\r\n      setCustomers([]); // No customers found\r\n    }\r\n  });\r\n};\r\n\r\nconst deleteCustomer = async (uuid) => {\r\n  try {\r\n    await deleteCustomerById(uuid);\r\n    window.location.reload(); // Reload the page after deletion\r\n  } catch (error) {\r\n    console.error(\"Error deleting customer: \", error);\r\n    alert(\"Failed to delete the customer. Please try again.\");\r\n  }\r\n};\r\n\r\nexport default () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for search input\r\n  const history = useHistory();\r\n\r\n  // Fetch all customers on component mount\r\n  useEffect(() => {\r\n    fetchCustomers(setCustomers);\r\n  }, []);\r\n\r\n  // Handle editing a customer\r\n  const editCustomer = (uuid) => {\r\n    history.push(`/customers/edit?uuid=${uuid}`);\r\n  };\r\n\r\n  // Handle deleting a customer\r\n  const handleDelete = (uuid) => {\r\n    if (window.confirm(\"Are you sure you want to delete this customer?\")) {\r\n      deleteCustomer(uuid);\r\n    }\r\n  };\r\n\r\n  // Navigate to Add Customer page\r\n  const addCustomer = () => {\r\n    history.push(\"/customers/add\");\r\n  };\r\n\r\n  // Function to normalize phone numbers (remove non-digit characters)\r\n  const normalizePhoneNumber = (phone) => {\r\n    return String(phone).replace(/\\D/g, \"\");\r\n  };\r\n\r\n  // Filter customers based on search term\r\n  const filteredCustomers = customers.filter((customer) => {\r\n    try {\r\n      if (!customer) return false;\r\n\r\n      const nameField = String(customer.name || \"\").toLowerCase().trim();\r\n      const term = String(searchTerm || \"\").toLowerCase().trim();\r\n      const nameMatch = nameField.includes(term);\r\n\r\n      const phoneField = String(customer.phone || customer.phone_number || \"\");\r\n      const normalizedPhoneField = normalizePhoneNumber(phoneField);\r\n      const normalizedSearchTerm = normalizePhoneNumber(searchTerm);\r\n\r\n      let phoneMatch = false;\r\n      if (normalizedSearchTerm !== \"\") {\r\n        phoneMatch = normalizedPhoneField.includes(normalizedSearchTerm);\r\n      }\r\n\r\n      return nameMatch || phoneMatch;\r\n    } catch (error) {\r\n      console.error(\"Error filtering customers:\", error);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"customers-list\"} />\r\n      <Helmet>\r\n        <title>Customers</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"View Customers\"} />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Customers-List\">\r\n        <Text\r\n          margin=\"0px 0px 20px 0px\"\r\n          text-align=\"center\"\r\n          font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n          color=\"--dark\"\r\n          sm-margin=\"0px 0px 30px 0px\"\r\n        >\r\n          Customers\r\n        </Text>\r\n        <Icon\r\n          category=\"md\"\r\n          icon={MdPersonAdd}\r\n          onClick={() => addCustomer()}\r\n          size=\"32px\"\r\n          align-self=\"flex-end\"\r\n          margin=\"16px 0px 16px 0px\"\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n\r\n        {/* Search Box */}\r\n        <Box display=\"flex\" justify-content=\"center\" margin=\"20px 0\">\r\n          <Input\r\n            width=\"50%\"\r\n            placeholder=\"Search by name or phone number\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            padding=\"10px\"\r\n            border-radius=\"7.5px\"\r\n            border=\"1px solid #ccc\"\r\n          />\r\n        </Box>\r\n\r\n        {/* Begin Fixed-Width Container with Desktop Dimensions and Scrolls */}\r\n        <Box\r\n          min-width=\"1200px\" // Ensures the container doesn't shrink below 1200px\r\n          overflow=\"auto\" // Enables horizontal and vertical scrolling when content overflows\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\"\r\n        >\r\n          {/* Header Row */}\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            padding=\"10px\"\r\n            border-width=\"0 0 2px 0\"\r\n            border-style=\"solid\"\r\n            border-color=\"#d1d7de\"\r\n            margin=\"0px 0px 10px 0px\"\r\n          >\r\n            <Text flex=\"1\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Name</Strong>\r\n            </Text>\r\n            <Text flex=\"1\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Phone Number</Strong>\r\n            </Text>\r\n            <Text width=\"100px\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Edit</Strong>\r\n            </Text>\r\n            <Text width=\"100px\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Delete</Strong>\r\n            </Text>\r\n          </Box>\r\n\r\n          {filteredCustomers.length > 0 ? (\r\n            <Box>\r\n              {filteredCustomers.map((customer) => (\r\n                <Box\r\n                  key={customer.uuid}\r\n                  display=\"flex\"\r\n                  align-items=\"center\"\r\n                  padding=\"10px\"\r\n                  border-width=\"0 0 1px 0\"\r\n                  border-style=\"solid\"\r\n                  border-color=\"#d1d7de\"\r\n                  background=\"#ffffff\"\r\n                  margin=\"0px 0px 10px 0px\"\r\n                >\r\n                  {/* Customer Name */}\r\n                  <Text\r\n                    flex=\"1\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 500 24px/1.2 --fontFamily-serifGeorgia\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {customer.name || customer.customer_name || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Phone Number */}\r\n                  <Text\r\n                    flex=\"1\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 20px/1.5 --fontFamily-sans\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {customer.countryCode || \"N/A\"} {customer.phone || customer.phone_number || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Edit Icon */}\r\n                  <Box\r\n                    width=\"100px\" // Fixed width for adequate space\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                    padding=\"0 10px\" // Adds space around the icon\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdCreate}\r\n                      size=\"32px\"\r\n                      onClick={() => editCustomer(customer.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Delete Icon */}\r\n                  <Box\r\n                    width=\"100px\" // Fixed width for adequate space\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                    padding=\"0 10px\" // Adds space around the icon\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"32px\"\r\n                      onClick={() => handleDelete(customer.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Text text-align=\"center\">No customers available</Text>\r\n          )}\r\n        </Box>\r\n        {/* End Fixed-Width Container */}\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  fetchCustomerById,\r\n  editCustomerById,\r\n  uploadImage,\r\n  deleteImageFromStorage,\r\n} from \"../utils/firebaseConfig\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Footer from \"../utils/footer\";\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst FileUploader = ({ handleFile }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    handleFile(files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleClick}\r\n        margin=\"40px 0\"\r\n              background=\"#cb7731\"\r\n              color=\"white\"\r\n              padding=\"10px 20px\"\r\n              border-radius=\"7.5px\"\r\n      >\r\n        Upload Images\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        accept=\"image/*\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\");\r\n  const [customerData, setCustomerData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [measurementUrls, setMeasurementUrls] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalImageUrl, setModalImageUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchCustomerById(uuid, (data) => {\r\n            if (data) {\r\n              setCustomerData(data);\r\n              setMeasurementUrls(data.measurements || []);\r\n            } else {\r\n              setError(\"Customer not found or invalid UUID.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid customer UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching customer data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedmeasurementUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file))\r\n      );\r\n      setMeasurementUrls((prevUrls) => [...prevUrls, ...uploadedmeasurementUrls]);\r\n    } catch (error) {\r\n      console.error(\"Error uploading images:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = async (index) => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this image? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        const imageToDelete = measurementUrls[index];\r\n        const storagePath = extractStoragePathFromURL(imageToDelete);\r\n        if (storagePath) {\r\n          await deleteImageFromStorage(storagePath);\r\n        }\r\n        const updatedImages = measurementUrls.filter((_, i) => i !== index);\r\n        setMeasurementUrls(updatedImages);\r\n      } catch (error) {\r\n        console.error(\"Error deleting image:\", error);\r\n        alert(\"Failed to delete image. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const extractStoragePathFromURL = (url) => {\r\n    try {\r\n      const baseURL = \"https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/\";\r\n      if (url.startsWith(baseURL)) {\r\n        const encodedPath = url.substring(baseURL.length, url.indexOf(\"?\"));\r\n        return decodeURIComponent(encodedPath);\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error extracting storage path:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSaveCustomer = async () => {\r\n    try {\r\n      const updatedCustomerData = {\r\n        ...customerData,\r\n        measurements: measurementUrls,\r\n      };\r\n      console.log({updatedCustomerData});\r\n      await editCustomerById(uuid, updatedCustomerData);\r\n      alert(\"Customer updated successfully\");\r\n      history.push(\"/customers/view\");\r\n    } catch (err) {\r\n      console.error(\"Error updating customer:\", err);\r\n      alert(\"Error updating customer. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const openImageInModal = (url) => {\r\n    setModalImageUrl(url);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setModalImageUrl(\"\");\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"edit-customer\"} />\r\n        <Helmet>\r\n          <title>Edit Customer</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Edit-Customer\">\r\n          <Text>Loading...</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"edit-customer\"} />\r\n        <Helmet>\r\n          <title>Edit Customer</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Edit-Customer\">\r\n          <Text>{error}</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"edit-customer\"} />\r\n      <Helmet>\r\n        <title>Edit Customer</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://live.staticflickr.com/65535/54572815698_9a48e198df_b.jpg\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Edit-Customer\">\r\n        <Box\r\n          minWidth=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\"\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            justify-content=\"center\"\r\n            position=\"relative\"\r\n          >\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdArrowBack}\r\n              size=\"40px\"\r\n              margin=\"16px\"\r\n              padding=\"0px 0px 16px 0px\"\r\n              onClick={() => history.push(\"/customers/view\")}\r\n              style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n              aria-label=\"Back to Orders\"\r\n            />\r\n            <Text\r\n              margin=\"0px 0px 20px 0px\"\r\n              text-align=\"center\"\r\n              font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n              color=\"--dark\"\r\n              sm-margin=\"0px 0px 30px 0px\"\r\n            >\r\n              Edit Customer\r\n            </Text>\r\n          </Box>\r\n          <Box minWidth=\"100px\" minHeight=\"100px\" padding=\"15px 0px 15px 0px\">\r\n            <Text margin=\"15px 0px 15px 0px\">Name</Text>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              borderColor=\"--color-darkL2\"\r\n              borderRadius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={customerData.name || \"\"}\r\n              \r\n              aria-label=\"Customer Name\"\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n            <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              borderColor=\"--color-darkL2\"\r\n              borderRadius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={customerData.countryCode + \" \" + customerData.phone || \"\"}\r\n              \r\n              aria-label=\"Phone Number\"\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n            <Text margin=\"15px 0px 15px 0px\">Images</Text>\r\n            <FileUploader handleFile={handleFileUpload} />\r\n            {/* measurementUrls */}\r\n            {measurementUrls.length > 0 && (\r\n              <Box\r\n                display=\"grid\"\r\n                grid-template-columns={`repeat(${Math.min(\r\n                  measurementUrls.length,\r\n                  4\r\n                )}, 225px)`}\r\n                grid-auto-rows=\"225px\"\r\n                grid-gap=\"15px\"\r\n                width={`${\r\n                  Math.min(measurementUrls.length, 4) * 225 +\r\n                  (Math.min(measurementUrls.length, 4) - 1) * 15\r\n                }px`}\r\n                overflow=\"auto\"\r\n                padding=\"15px\"\r\n                border=\"1px solid #ccc\"\r\n                margin=\"15px 0\"\r\n              >\r\n                {measurementUrls.map((url, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    as=\"div\"\r\n                    position=\"relative\" // To position the delete icon\r\n                  >\r\n                    {/* Image Thumbnail */}\r\n                    <Box\r\n                      as=\"img\"\r\n                      src={url}\r\n                      width=\"225px\"\r\n                      height=\"225px\"\r\n                      object-fit=\"cover\"\r\n                      border-radius=\"5px\"\r\n                      onClick={() => openImageInModal(url)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      alt={`Order Image ${index + 1}`}\r\n                    />\r\n                    {/* Delete Icon */}\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"24px\"\r\n                      color=\"#ff0000\"\r\n                      position=\"absolute\"\r\n                      top=\"5px\"\r\n                      right=\"5px\"\r\n                      onClick={() => handleDeleteImage(index)}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"rgba(255,255,255,0.7)\",\r\n                        borderRadius: \"50%\",\r\n                      }}\r\n                      aria-label={`Delete Image ${index + 1}`}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n            <Button\r\n              onClick={handleSaveCustomer}\r\n              margin=\"40px 0\"\r\n              background=\"#cb7731\"\r\n              color=\"white\"\r\n              padding=\"10px 20px\"\r\n              border-radius=\"7.5px\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        {modalOpen && (\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              zIndex: 1000,\r\n            }}\r\n            onClick={closeModal}\r\n          >\r\n            <img\r\n              src={modalImageUrl}\r\n              alt=\"Full Size\"\r\n              style={{ maxHeight: \"90%\", maxWidth: \"90%\" }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n          </div>\r\n        )}\r\n      </Section>\r\n      {/* <Footer /> */}\r\n    </Theme>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Login from \"pages/utils/login\";\r\nimport Orders from \"pages/orders/ordersManagers\";\r\nimport OrdersAdd from \"pages/orders/ordersAdd\";\r\nimport OrdersEdit from \"pages/orders/ordersEdit\";\r\nimport OrdersView from \"pages/orders/ordersView\"; // Public access for customers to view orders\r\nimport UsersAdd from \"pages/sudo/sudoAddUser\"; // Sudo-only route\r\nimport Page404 from \"pages/utils/page404\";\r\nimport CalendarPage from \"pages/calendar/calendar\";\r\nimport AddCustomer from \"pages/customers/AddCustomer\";\r\nimport ViewCustomers from \"pages/customers/ViewCustomers\";\r\nimport EditCustomer from \"pages/customers/EditCustomer\";\r\n// Private route for authenticated users (manager or sudo)\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        role ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n// Sudo-only route\r\nconst SudoRoute = ({ component: Component, ...rest }) => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        role === \"sudo\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {/* Public Routes */}\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/orders/view\" component={OrdersView} /> {/* Publicly accessible */}\r\n        \r\n        {/* Private Routes for Authenticated Users */}\r\n        <PrivateRoute exact path=\"/orders\" component={Orders} />\r\n        <PrivateRoute exact path=\"/orders/add\" component={OrdersAdd} />\r\n        <PrivateRoute exact path=\"/orders/edit\" component={OrdersEdit} />\r\n        <PrivateRoute exact path=\"/calendar\" component={CalendarPage} />\r\n        <PrivateRoute exact path=\"/customers/view\" component={ViewCustomers} />\r\n        <PrivateRoute exact path=\"/customers/add\" component={AddCustomer} />\r\n        <PrivateRoute exact path=\"/customers/edit\" component={EditCustomer} />\r\n\r\n        {/* Sudo Route */}\r\n        <SudoRoute exact path=\"/sudo/users/add\" component={UsersAdd} />\r\n\r\n        {/* Redirect to login if no match */}\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport QAPI from \"qapi\";\r\n\r\nwindow.QAPI = QAPI;\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","export default {\r\n\t\"pages\": {\r\n\t\t\"root\": {\r\n\t\t\t\"id\": \"root\",\r\n\t\t\t\"pageUrl\": \"root\",\r\n\t\t\t\"name\": \"root\",\r\n\t\t\t\"children\": [\r\n\t\t\t\t\"66f6d1359710450018a331ba\",\r\n\t\t\t\t\"66f6d1359710450018a331bd\",\r\n\t\t\t\t\"670bf015e5d277001898945e\",\r\n\t\t\t\t\"670bf0609335410018c70fb2\"\r\n\t\t\t]\r\n\t\t},\r\n\t\t\"66f6d1359710450018a331ba\": {\r\n\t\t\t\"id\": \"66f6d1359710450018a331ba\",\r\n\t\t\t\"name\": \"404\",\r\n\t\t\t\"pageUrl\": \"404\"\r\n\t\t},\r\n\t\t\"66f6d1359710450018a331bd\": {\r\n\t\t\t\"id\": \"66f6d1359710450018a331bd\",\r\n\t\t\t\"name\": \"Login\",\r\n\t\t\t\"pageUrl\": \"index\"\r\n\t\t},\r\n\t\t\"670bf015e5d277001898945e\": {\r\n\t\t\t\"id\": \"670bf015e5d277001898945e\",\r\n\t\t\t\"pageUrl\": \"login\",\r\n\t\t\t\"name\": \"Orders-Managers\"\r\n\t\t},\r\n\t\t\"670bf0609335410018c70fb2\": {\r\n\t\t\t\"id\": \"670bf0609335410018c70fb2\",\r\n\t\t\t\"pageUrl\": \"orders-customers\",\r\n\t\t\t\"name\": \"Orders-Add\"\r\n\t\t}\r\n\t},\r\n\t\"mode\": \"production\",\r\n\t\"projectType\": \"create-react-app\",\r\n\t\"site\": {\r\n\t\t\"styles\": {},\r\n\t\t\"seo\": {}\r\n\t}\r\n}"],"sourceRoot":""}